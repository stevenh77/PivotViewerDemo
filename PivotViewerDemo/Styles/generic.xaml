<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:syscon="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls"
                    xmlns:primitives="clr-namespace:System.Windows.Controls.Primitives;assembly=System.Windows.Controls"
                    xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk"
                    xmlns:int="clr-namespace:Microsoft.Internal.Pivot.Interactivity;assembly=System.Windows.Controls.Pivot"
                    xmlns:con="clr-namespace:Microsoft.Internal.Pivot.Controls;assembly=System.Windows.Controls.Pivot"
                    xmlns:views="clr-namespace:Microsoft.Internal.Pivot.Views;assembly=System.Windows.Controls.Pivot">
    
    <!-- Base Colors -->
    <Color x:Key="AccentColor">#FF299CD6</Color>
    <Color x:Key="ForegroundColor">#FF000000</Color>
    <Color x:Key="BackgroundColor">#FFFFFFFF</Color>
    <Color x:Key="BorderColor">#FFCCCCCC</Color>
    <Color x:Key="ClearButtonGradient1">#FFFF9393</Color>
    <Color x:Key="ClearButtonGradient2">#FFD94D4D</Color>

    <!-- Pane background -->
    <SolidColorBrush x:Key="BackgroundBrush"
                     Color="#FFF2F2F2" />
    <!-- Collection area background (95% lightness of Background) -->
    <SolidColorBrush x:Key="SecondaryBackgroundBrush"
                     Color="{StaticResource BackgroundColor}" />
    <!-- Used for the background of subcontrols -->
    <SolidColorBrush x:Key="ControlBackgroundBrush"
                     Color="#FFD9D9D9" />

    <!-- Colors used for text -->
    <SolidColorBrush x:Key="ForegroundBrush"
                     Color="{StaticResource ForegroundColor}" />
    <!-- 200% lightness of Foreground -->
    <SolidColorBrush x:Key="SecondaryForegroundBrush"
                     Color="#FF808080" />

    <!-- Used for borders -->
    <SolidColorBrush x:Key="BorderBrush"
                     Color="{StaticResource BorderColor}" />

    <!-- Used for Detail Pane alternating backgrounds -->
    <!-- 90% lightness of BackgroundColor -->
    <Color x:Key="PrimaryItemValueBackgroundColor">#FFE6E6E6</Color>
    <!-- 95% lightness of BackgroundColor -->
    <Color x:Key="SecondaryItemValueBackgroundColor">#FFF2F2F2</Color>

    <!-- Background of the clear button -->
    <LinearGradientBrush x:Key="ClearButtonCircleBackground"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="{StaticResource ClearButtonGradient1}"
                      Offset="0" />
        <GradientStop Color="{StaticResource ClearButtonGradient2}"
                      Offset="1" />
    </LinearGradientBrush>

    <DropShadowEffect x:Key="DropShadowEffect"
                      Direction="315"
                      Opacity="0.3"
                      BlurRadius="8"
                      ShadowDepth="0" />
    <DropShadowEffect x:Key="PopupDropShadowEffect"
                      Direction="315"
                      ShadowDepth="1"
                      BlurRadius="4"
                      Opacity="0.4" />
    <Thickness x:Key="FocusedBorderThickness">1</Thickness>
    <Thickness x:Key="UnfocusedBorderThickness">0</Thickness>

    <!-- Style for the textblocks shown in the search suggestions -->
    <Style x:Key="SearchSuggestionTextBlockStyle"
           TargetType="con:FadingTextBlock">
        <Setter Property="ShowPopup"
                Value="False" />
    </Style>

    <!-- Style for text blocks inside of buttons -->
    <Style x:Key="ButtonTextStyle"
           TargetType="TextBlock">
        <Setter Property="Opacity"
                Value="0.8" />
        <Setter Property="Margin"
                Value="3,1,3,3" />
    </Style>

    <Style x:Key="Style_SearchTextBox"
           TargetType="TextBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <ScrollViewer x:Name="ContentElement"
                                  BorderThickness="0"
                                  IsTabStop="False"
                                  Padding="{TemplateBinding Padding}"
                                  Margin="1">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled" />
                                <VisualState x:Name="ReadOnly" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused" />
                                <VisualState x:Name="InvalidFocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="sdk:PivotViewerMultiSizeImage">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="sdk:PivotViewerMultiSizeImage">
                    <Image x:Name="PART_Image"
                           Stretch="{Binding Stretch, RelativeSource={RelativeSource TemplatedParent}}"
                           Width="{Binding Width, RelativeSource={RelativeSource TemplatedParent}}"
                           MinWidth="{Binding MinWidth, RelativeSource={RelativeSource TemplatedParent}}"
                           MaxWidth="{Binding MaxWidth, RelativeSource={RelativeSource TemplatedParent}}"
                           Height="{Binding Height, RelativeSource={RelativeSource TemplatedParent}}"
                           MinHeight="{Binding MinHeight, RelativeSource={RelativeSource TemplatedParent}}"
                           MaxHeight="{Binding MaxHeight, RelativeSource={RelativeSource TemplatedParent}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="sdk:PivotViewerDefaultItemAdorner">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="sdk:PivotViewerDefaultItemAdorner">
                            <Grid x:Name="PART_Root" Background="Transparent">
                                <Grid.Resources>
                                    <Style x:Name="CommandButtonStyle" TargetType="Button">
                                        <Style.Setters>
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="Button">
                                                        <Grid Background="Transparent">
                                                            <VisualStateManager.VisualStateGroups>
                                                                <VisualStateGroup x:Name="CommonStates">
                                                                    <VisualState x:Name="Normal"/>
                                                                    <VisualState x:Name="MouseOver">
                                                                        <Storyboard>
                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HoverBorder">
                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.3"/>
                                                                            </DoubleAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Disabled"/>
                                                                </VisualStateGroup>
                                                                <VisualStateGroup x:Name="FocusStates">
                                                                    <VisualState x:Name="Focused">
                                                                        <Storyboard>
                                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FocusBorder">
                                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Unfocused"/>
                                                                </VisualStateGroup>
                                                            </VisualStateManager.VisualStateGroups>
                                                            <Border x:Name="HoverBorder" Background="{Binding (con:FrameworkElementExtensions.Brushes)[FilterBorderBrush], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}"
                                                                                 BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" BorderThickness="1" Opacity="0.1" Margin="-1"/>
                                                            <Border x:Name="FocusBorder" Margin="-1" Visibility="Collapsed" BorderThickness="{StaticResource FocusedBorderThickness}" BorderBrush="{Binding (con:FrameworkElementExtensions.Brushes)[FocusBorderBrush], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}"/>
                                                            <ContentPresenter Margin="3"/>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style.Setters>
                                    </Style>

                                    <Storyboard x:Key="SmallGroupStoryBoard">
                                        <DoubleAnimationUsingKeyFrames x:Key="OpacityAnimation"
                                    Storyboard.TargetProperty="Opacity"
                                    Duration="0:0:0.8">
                                            <SplineDoubleKeyFrame KeyTime="0:0:0.8"
                                        KeySpline="0,0.03,0.32,1" />
                                        </DoubleAnimationUsingKeyFrames>

                                        <DoubleAnimationUsingKeyFrames x:Key="WidthAnimation"
                                    Storyboard.TargetProperty="Width"
                                    Duration="0:0:0.8">
                                            <SplineDoubleKeyFrame KeyTime="0:0:0.8"
                                        KeySpline="0,0.03,0.32,1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>

                                    <Storyboard x:Key="LargeGroupStoryBoard">
                                        <DoubleAnimationUsingKeyFrames x:Key="OpacityAnimation"
                                    Storyboard.TargetProperty="Opacity"
                                    Duration="0:0:0.8">
                                            <SplineDoubleKeyFrame KeyTime="0:0:0.8"
                                        KeySpline="0,0.03,0.32,1" />
                                        </DoubleAnimationUsingKeyFrames>

                                        <DoubleAnimationUsingKeyFrames x:Key="WidthAnimation"
                                    Storyboard.TargetProperty="Width"
                                    Duration="0:0:0.8">
                                            <SplineDoubleKeyFrame KeyTime="0:0:0.8"
                                        KeySpline="0,0.03,0.32,1" />
                                        </DoubleAnimationUsingKeyFrames>

                                        <DoubleAnimationUsingKeyFrames x:Key="HeightAnimation"
                                    Storyboard.TargetProperty="Height"
                                    Duration="0:0:0.8">
                                            <SplineDoubleKeyFrame KeyTime="0:0:0.8"
                                        KeySpline="0,0.03,0.32,1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>


                                </Grid.Resources>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ButtonBorder">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled"/>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="ItemStates">
                                        <VisualState x:Name="Default"/>
                                        <VisualState x:Name="IsSelected">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusedItemBorder">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Border x:Name="ButtonBorder"
                                Margin="-1"
                                BorderThickness="4"
                                BorderBrush="{Binding (con:FrameworkElementExtensions.Brushes)[ControlHoverBackground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}"
                                Opacity="1"/>
                                <Border x:Name="FocusedItemBorder"
                                Margin="-1"
                                BorderThickness="4"
                                BorderBrush="{Binding (con:FrameworkElementExtensions.Brushes)[FocusBorderBrush], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}"
                                Opacity="0"/>
                                <con:ShrinkBasedMultiSizeControl x:Name="PART_CommandContainer" MinDisplayableWidth="80" Margin="-1" UseLayoutRounding="False">
                                    <Border x:Name="CommandItem"
                                    con:ShrinkBasedMultiSizeControl.ShrinkStoryboard="{StaticResource LargeGroupStoryBoard}"
                                    Background="Transparent" HorizontalAlignment="Right" VerticalAlignment="Top">
                                        <ItemsControl IsTabStop="False" HorizontalAlignment="Right" VerticalAlignment="Top" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Commands}">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <Button x:Name="CommandButton" Style="{StaticResource CommandButtonStyle}"
                                                            Command="{Binding}"
                                                            CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=con:ShrinkBasedMultiSizeControl}}"
                                                            ToolTipService.ToolTip="{Binding ToolTip}">
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="Auto" />
                                                                <ColumnDefinition Width="Auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Border x:Name="Unshrinkable" con:ShrinkBasedMultiSizeControl.ShrinkGroup="Never" 
                                                            Grid.Column="0" Visibility="{Binding Icon, Converter={StaticResource NullToVisibilityConverter}}">
                                                                <Image x:Name="unshrinkableElement" Width="16" Height="16" Source="{Binding Icon}" Margin="2,0,2,0"/>
                                                            </Border>
                                                            <Border x:Name="Shrinkable" con:ShrinkBasedMultiSizeControl.ShrinkGroup="Small"
                                                            con:ShrinkBasedMultiSizeControl.ShrinkStoryboard="{StaticResource SmallGroupStoryBoard}"                                                                        
                                                            Visibility="{Binding DisplayName, Converter={StaticResource NullToVisibilityConverter}}"
                                                            Grid.Column="1">
                                                                <TextBlock x:Name="shrinkableElement"  Margin="2,0,2,0" Height="16" Text="{Binding DisplayName}"
                                                                   Foreground="{Binding SecondaryBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}"/>
                                                            </Border>
                                                        </Grid>
                                                    </Button>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <StackPanel Orientation="Horizontal" Background="{Binding BorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}"/>
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                        </ItemsControl>
                                    </Border>
                                </con:ShrinkBasedMultiSizeControl>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

    <!-- Default template for a ContentControl filled with a background color -->
    <ControlTemplate x:Key="BackgroundContentControlTemplate"
                     TargetType="ContentControl">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                           Storyboard.TargetName="FocusBorder">
                                <DiscreteObjectKeyFrame KeyTime="0"
                                                        Value="Visible" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unfocused" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="FocusBorder"
                    Visibility="Collapsed"
                    BorderThickness="{StaticResource FocusedBorderThickness}"
                    BorderBrush="{Binding (con:FrameworkElementExtensions.Brushes)[FocusBorderBrush], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
            <Border Background="{TemplateBinding Background}">
                <ContentPresenter Content="{TemplateBinding Content}" />
            </Border>
        </Grid>
    </ControlTemplate>

    <!-- Default template for CollectionViewContainer -->
    <Style TargetType="con:CollectionViewContainer">
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="con:CollectionViewContainer">
                    <Grid>
                        <!-- this element holds the focus while the view is switching -->
                        <ContentControl x:Name="PART_FocusHolder"
                                        IsTabStop="False" />

                        <con:SeahorseItemExitHost x:Name="PART_ExitHost"
                                                  IsHitTestVisible="false"
                                                  Margin="{Binding ViewportPadding}"
                                                  LayoutEngine="{Binding LayoutEngine}"
                                                  SeahorseItemSource="{Binding SeahorseItems}"
                                                  PositionInWindow="{Binding PositionInWindow, Mode=TwoWay}" />
                        <con:CrossFadeControl x:Name="PART_CrossFade"
                                              IsTabStop="False"
                                              VerticalAlignment="Top" />
                        <ContentPresenter Content="{TemplateBinding Content}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Style_EmptyFocusElement"
           TargetType="ContentControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)"
                                                                       Storyboard.TargetName="FocusBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource FocusedBorderThickness}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush)"
                                                                       Storyboard.TargetName="FocusBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Null}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="FocusBorder" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- View template for ItemViewerView -->
    <Style TargetType="views:ItemViewerView">
        <Style.Setters>
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Stretch" />
            <Setter Property="VerticalContentAlignment"
                    Value="Stretch" />
            <Setter Property="IsTabStop"
                    Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ContentControl">
                        <ContentControl x:Name="PART_Control"
                                        HorizontalContentAlignment="Stretch"
                                        VerticalContentAlignment="Stretch"
                                        IsTabStop="False">

                            <int:Interaction.Behaviors>
                                <int:MouseWheelZoomBehavior    Command="{Binding FreeFormZoomCommand}" />
                                <int:MousePanBehavior          Command="{Binding FreeFormPanCommand}" />
                                <int:AttachMessageCommandContextOnLoadBehavior Target="{Binding}" />
                            </int:Interaction.Behaviors>

                            <con:NestableButton Template="{StaticResource BackgroundContentControlTemplate}"
                                                Background="Transparent"
                                                IsTabStop="False">

                                <int:Interaction.Behaviors>
                                    <int:MouseLeftClickBehavior Command="{Binding ResetZoomPanCommand}"
                                                                CommandParameter="{Binding}" />
                                </int:Interaction.Behaviors>

                                <Grid Background="{TemplateBinding Background}">
                                    <Grid.Resources>
                                        <Style x:Key="ItemViewerViewScrollViewerStyle"
                                               TargetType="ScrollViewer">
                                            <Setter Property="VerticalScrollBarVisibility"
                                                    Value="Disabled" />
                                            <Setter Property="IsTabStop"
                                                    Value="False" />
                                            <Setter Property="Margin"
                                                    Value="0" />
                                            <Setter Property="BorderThickness"
                                                    Value="0" />
                                            <Setter Property="Padding"
                                                    Value="0" />
                                            <Setter Property="Background"
                                                    Value="Transparent" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ScrollViewer">
                                                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                                                BorderThickness="{TemplateBinding BorderThickness}">
                                                            <Grid Background="{TemplateBinding Background}">
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="*" />
                                                                    <RowDefinition Height="Auto" />
                                                                </Grid.RowDefinitions>
                                                                <ScrollContentPresenter x:Name="ScrollContentPresenter"
                                                                                        Cursor="{TemplateBinding Cursor}"
                                                                                        Margin="{TemplateBinding Padding}">
                                                                    <int:Interaction.Behaviors>
                                                                        <int:SizeChangedCommandBehavior EventName="SizeChanged"
                                                                                                        Command="{Binding SizeChangedCommand}" />
                                                                    </int:Interaction.Behaviors>
                                                                </ScrollContentPresenter>
                                                                <ScrollBar x:Name="HorizontalScrollBar"
                                                                           Grid.Row="1"
                                                                           VerticalAlignment="Bottom"
                                                                           Margin="{Binding ScrollBarMargin}"
                                                                           con:PivotScrollBar.ButtonHover="{Binding (con:FrameworkElementExtensions.Brushes)[ControlHoverBackground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}"
                                                                           con:PivotScrollBar.ThumbHover="{Binding (con:FrameworkElementExtensions.Brushes)[ControlHoverBackground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}"
                                                                           IsTabStop="False"
                                                                           Maximum="{TemplateBinding ScrollableWidth}"
                                                                           Minimum="0"
                                                                           Orientation="Horizontal"
                                                                           Foreground="{TemplateBinding Foreground}"
                                                                           Background="{Binding ControlBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}"
                                                                           Style="{StaticResource HorizontalCustomScrollBar}"
                                                                           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                                           Value="{TemplateBinding HorizontalOffset}"
                                                                           ViewportSize="{TemplateBinding ViewportWidth}">
                                                                    <int:Interaction.Behaviors>
                                                                        <int:SizeChangedCommandBehavior EventName="SizeChanged"
                                                                                                        Command="{Binding ViewportPaddingBottomAdjustmentCommand}" />
                                                                    </int:Interaction.Behaviors>
                                                                </ScrollBar>
                                                            </Grid>
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Grid.Resources>
                                    <ScrollViewer  x:Name="m_histogramScroller"
                                                   HorizontalScrollBarVisibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HorizontalScrollBarVisibility}"
                                                   Style="{StaticResource ItemViewerViewScrollViewerStyle}">
                                        <con:ScaleHost x:Name="m_scaleHost"
                                                       TargetTransformMatrix="{Binding TargetTransformMatrix}"
                                                       ContentSize="{Binding ViewSize}"
                                                       HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                       VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                       Content="{TemplateBinding Content}"
                                                       CurrentTransformMatrix="{Binding CurrentTransformMatrix, Mode=TwoWay}"
                                                       HorizontalScrollCommand="{Binding FreeFormPanCommand}"
                                                       BorderPadding="{Binding BorderPadding}"
                                                       ViewportPadding="{Binding ViewportPadding}">
                                            <int:Interaction.Behaviors>
                                                <int:KeyGestureCommandBehavior Gesture="Up"
                                                                               Command="{Binding ArrowCommand}"
                                                                               CommandParameter="Up"
                                                                               HandleKeyEvent="True" />
                                                <int:KeyGestureCommandBehavior Gesture="Down"
                                                                               Command="{Binding ArrowCommand}"
                                                                               CommandParameter="Down"
                                                                               HandleKeyEvent="True" />
                                                <int:KeyGestureCommandBehavior Gesture="Left"
                                                                               Command="{Binding ArrowCommand}"
                                                                               CommandParameter="Left"
                                                                               HandleKeyEvent="True" />
                                                <int:KeyGestureCommandBehavior Gesture="Right"
                                                                               Command="{Binding ArrowCommand}"
                                                                               CommandParameter="Right"
                                                                               HandleKeyEvent="True" />
                                                <int:KeyGestureCommandBehavior Gesture="Home"
                                                                               Command="{Binding ResetZoomPanCommand}"
                                                                               CommandParameter="{Binding}"
                                                                               HandleKeyEvent="True" />
                                            </int:Interaction.Behaviors>
                                        </con:ScaleHost>
                                    </ScrollViewer>
                                    <!-- This element is a focus-catcher: when an on-item UI element had focus and disappears,
                                         we want to keep focus inside the ItemViewer, and this element does just that -->
                                    <ContentControl x:Name="FocusElement"
                                                    Style="{StaticResource Style_EmptyFocusElement}"
                                                    IsHitTestVisible="False" />

                                    <!-- The hover label that shows up when zoomed in -->
                                    <con:ConstrainedMarginLayoutPanel x:Name="HoverLabelConstrainedMarginLayoutPanel"
                                                                      IsHitTestVisible="False"
                                                                      HorizontalAlignment="Stretch"
                                                                      VerticalAlignment="Stretch"
                                                                      ProposedMargin="{Binding Path=ProposedHoverLabelMargin}"
                                                                      MinimumMargin="{Binding Path=CurrentViewportPadding}"
                                                                      MinimumChildWidth="100"
                                                                      MinimumChildHeight="45">
                                        <con:FadeVisibilityControl x:Name="HoverLabel"
                                                                   IsHitTestVisible="False"
                                                                   HorizontalAlignment="Left"
                                                                   VerticalAlignment="Bottom"
                                                                   FadeVisibility="{Binding Path=HoverLabelVisibility}"
                                                                   IsTabStop="False">
                                            <Border x:Name="LabelBorder"
                                                    BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HoverLabelBorderBrush}"
                                                    BorderThickness="1"
                                                    Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HoverLabelBackgroundBrush}"
                                                    CornerRadius="1"
                                                    Padding="3,1,3,2">
                                                <TextBlock x:Name="HoverLabelTextBlock"
                                                           Text="{Binding Path=HoverLabelText}"
                                                           TextTrimming="WordEllipsis"
                                                           TextWrapping="Wrap"
                                                           FontSize="10"
                                                           Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HoverLabelTextBrush}" />
                                            </Border>
                                        </con:FadeVisibilityControl>
                                    </con:ConstrainedMarginLayoutPanel>

                                    <con:NestableButton x:Name="DoubleClickHelperButton"
                                                        IsHitTestVisible="false"
                                                        IsTabStop="False"
                                                        Background="Transparent" />
                                </Grid>

                            </con:NestableButton>
                        </ContentControl>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <Style x:Key="Style_ToggleButton"
           TargetType="ToggleButton">
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Padding"
                Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="hover"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.8" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="hover"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.8" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.2" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.8" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="checked_hover">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="checked_hover">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.8" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="checked_hover">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.8" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Background"
                                   Fill="{TemplateBinding Background}"
                                   Stroke="{TemplateBinding BorderBrush}"
                                   StrokeThickness="{TemplateBinding BorderThickness}" />
                        <Rectangle x:Name="hover"
                                   Fill="{Binding (con:FrameworkElementExtensions.Brushes)[ControlHoverBackground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}"
                                   Stroke="{Binding (con:FrameworkElementExtensions.Brushes)[FilterBorderBrush], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Opacity="0" />
                        <Rectangle x:Name="checked_hover"
                                   Fill="{Binding (con:FrameworkElementExtensions.Brushes)[ControlHoverBackground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}"
                                   Stroke="{TemplateBinding BorderBrush}"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Opacity="0" />
                        <ContentPresenter x:Name="contentPresenter"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Opacity="0.8" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Style_ScrollViewer_SortDropdown"
           TargetType="ScrollViewer">
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Top" />
        <Setter Property="VerticalScrollBarVisibility"
                Value="Visible" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Background"
                Value="{Binding Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
        <Setter Property="Foreground"
                Value="{x:Null}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource BorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter x:Name="ScrollContentPresenter"
                                                    Cursor="{TemplateBinding Cursor}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}" />
                            <Rectangle Grid.Column="1"
                                       Grid.Row="1" />
                            <ScrollBar x:Name="VerticalScrollBar"
                                       con:PivotScrollBar.ButtonHover="{Binding (con:FrameworkElementExtensions.Brushes)[ControlHoverBackground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}"
                                       con:PivotScrollBar.ThumbHover="{Binding (con:FrameworkElementExtensions.Brushes)[ControlHoverBackground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}"
                                       IsTabStop="False"
                                       Margin="0,-1,-1,-1"
                                       Width="18"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                       Grid.Column="1"
                                       Grid.Row="0"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       Minimum="0"
                                       Value="{TemplateBinding VerticalOffset}"
                                       Orientation="Vertical"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Foreground="{TemplateBinding Foreground}" />
                            <ScrollBar x:Name="HorizontalScrollBar"
                                       con:PivotScrollBar.ButtonHover="{Binding (con:FrameworkElementExtensions.Brushes)[ControlHoverBackground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}"
                                       con:PivotScrollBar.ThumbHover="{Binding (con:FrameworkElementExtensions.Brushes)[ControlHoverBackground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}"
                                       IsTabStop="False"
                                       Height="18"
                                       Margin="-1,0,-1,-1"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                       Grid.Column="0"
                                       Grid.Row="1"
                                       Maximum="{TemplateBinding ScrollableWidth}"
                                       Minimum="0"
                                       Value="{TemplateBinding HorizontalOffset}"
                                       Orientation="Horizontal"
                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                       Foreground="{TemplateBinding Foreground}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Style_ViewSwitcherItemContainer"
           TargetType="ListBoxItem">
        <Setter Property="Background"
                Value="{x:Null}" />
        <Setter Property="Foreground"
                Value="{x:Null}" />
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="IsTabStop"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid Width="29"
                          Height="22"
                          Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="BG_hover"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.8" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="BG_hover"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.8" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="0.2" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="FocusBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused" />
                                <VisualState x:Name="InvalidFocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="contentPresenter"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0.8" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="BG_selected"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="contentPresenter"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0.8" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="BG_selected"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="BG_normal"
                                   Fill="{TemplateBinding Background}"
                                   Stroke="{TemplateBinding BorderBrush}"
                                   Opacity="0" />
                        <Rectangle x:Name="BG_hover"
                                   Fill="{Binding (con:FrameworkElementExtensions.Brushes)[ControlHoverBackground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}"
                                   Stroke="{Binding (con:FrameworkElementExtensions.Brushes)[FilterBorderBrush], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}"
                                   Opacity="0" />
                        <Rectangle x:Name="BG_selected"
                                   Opacity="0"
                                   Fill="{Binding ControlBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
                        <ContentPresenter x:Name="contentPresenter"
                                          Grid.Column="1"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Opacity="0.65" />
                        <Border x:Name="FocusBorder"
                                Margin="0,0,0,2"
                                Visibility="Collapsed"
                                BorderThickness="{StaticResource FocusedBorderThickness}"
                                BorderBrush="{Binding (con:FrameworkElementExtensions.Brushes)[FocusBorderBrush], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ClickDragSlider_ThumbStyle"
           TargetType="Thumb">
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="Background"
                Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <!-- This background is needed because we are overlapping this thumb with 
                                the horizontal bar of the slider and don't want it to show through -->
                    <Grid Background="{Binding Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="Hover">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="Background">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="Hover">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="Background">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="0.65" />
                        <Border x:Name="Hover"
                                Background="{TemplateBinding Foreground}"
                                Opacity="0" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="#FFFFFFFF"
                                   IsHitTestVisible="false"
                                   Opacity="0" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Style_ZoomSlider"
           TargetType="con:ClickDragSlider">
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Maximum"
                Value="10" />
        <Setter Property="Minimum"
                Value="0" />
        <Setter Property="Value"
                Value="0" />
        <Setter Property="Foreground"
                Value="{Binding (con:FrameworkElementExtensions.Brushes)[ControlForeground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
        <Setter Property="BorderBrush"
                Value="{Binding BorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="con:ClickDragSlider">
                    <Grid>
                        <Grid.Resources>
                            <ControlTemplate x:Key="RepeatButtonTemplate">
                                <Grid Opacity="0"
                                      Background="Transparent" />
                            </ControlTemplate>
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="HorizontalTrackRectangleDisabledOverlay"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="HorizontalThumbDisabledOverlay"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="VerticalTrackRectangleDisabledOverlay"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="VerticalThumbDisabledOverlay"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="FocusBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="HorizontalTemplate"
                              Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Rectangle x:Name="HorizontalTrackRectangle"
                                       Fill="{TemplateBinding BorderBrush}"
                                       StrokeThickness="{TemplateBinding BorderThickness}"
                                       Height="3"
                                       Margin="1,0"
                                       Grid.Column="0"
                                       Grid.ColumnSpan="3" />
                            <Rectangle x:Name="HorizontalTrackRectangleDisabledOverlay"
                                       Fill="White"
                                       Height="3"
                                       Margin="5,0,5,0"
                                       Opacity=".55"
                                       Visibility="Collapsed"
                                       Grid.Column="0"
                                       Grid.ColumnSpan="3" />
                            <RepeatButton x:Name="HorizontalTrackLargeChangeDecreaseRepeatButton"
                                          IsTabStop="False"
                                          Template="{StaticResource RepeatButtonTemplate}"
                                          Height="18"
                                          Grid.Column="0" />
                            <Thumb x:Name="HorizontalThumb"
                                   IsTabStop="True"
                                   Height="12"
                                   Width="6"
                                   Grid.Column="1"
                                   Style="{StaticResource ClickDragSlider_ThumbStyle}"
                                   Cursor="SizeWE"
                                   Foreground="{Binding (con:FrameworkElementExtensions.Brushes)[ControlHoverBackground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}"
                                   Background="{TemplateBinding Foreground}" />
                            <Rectangle x:Name="HorizontalThumbDisabledOverlay"
                                       Fill="White"
                                       Width="11"
                                       Opacity=".55"
                                       Visibility="Collapsed"
                                       Grid.Column="1"
                                       StrokeThickness="0" />
                            <RepeatButton x:Name="HorizontalTrackLargeChangeIncreaseRepeatButton"
                                          IsTabStop="False"
                                          Height="18"
                                          Grid.Column="2"
                                          Opacity="0" />
                        </Grid>
                        <Grid x:Name="VerticalTemplate"
                              Visibility="Collapsed"
                              Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Rectangle x:Name="VerticalTrackRectangle"
                                       Fill="{TemplateBinding BorderBrush}"
                                       StrokeThickness="{TemplateBinding BorderThickness}"
                                       Width="3"
                                       Margin="0,1"
                                       Grid.Row="0"
                                       Grid.RowSpan="3" />
                            <Rectangle x:Name="VerticalTrackRectangleDisabledOverlay"
                                       Fill="White"
                                       Width="3"
                                       Margin="0,5,0,5"
                                       Opacity=".55"
                                       Visibility="Collapsed"
                                       Grid.Row="0"
                                       Grid.RowSpan="3" />
                            <RepeatButton x:Name="VerticalTrackLargeChangeDecreaseRepeatButton"
                                          IsTabStop="False"
                                          Template="{StaticResource RepeatButtonTemplate}"
                                          Width="18"
                                          Grid.Row="2" />
                            <Thumb x:Name="VerticalThumb"
                                   IsTabStop="True"
                                   Height="11"
                                   Width="18"
                                   Grid.Row="1" />
                            <Rectangle x:Name="VerticalThumbDisabledOverlay"
                                       Fill="White"
                                       Width="11"
                                       Opacity=".55"
                                       Visibility="Collapsed"
                                       Grid.Row="1"
                                       StrokeThickness="0" />
                            <RepeatButton x:Name="VerticalTrackLargeChangeIncreaseRepeatButton"
                                          IsTabStop="False"
                                          Template="{StaticResource RepeatButtonTemplate}"
                                          Width="18"
                                          Grid.Row="0" />
                        </Grid>
                        <Border x:Name="FocusBorder"
                                Margin="-6,0,-6,0"
                                Visibility="Collapsed"
                                BorderThickness="{StaticResource FocusedBorderThickness}"
                                BorderBrush="{Binding (con:FrameworkElementExtensions.Brushes)[FocusBorderBrush], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="Template_Button_General"
                     TargetType="Button">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Duration="00:00:00.0010000"
                                                           Storyboard.TargetName="BG_hover"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                      Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <!-- 
                             why this doesn't work here?? :(
                                    <ObjectAnimationUsingKeyFrames
                                             Storyboard.TargetName="BG_normal"
                                             Storyboard.TargetProperty="(UIElement.Background)">
                                             <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource Control_Background_Hover}"/>        
                                        </ObjectAnimationUsingKeyFrames>
                              -->
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Duration="00:00:00.0010000"
                                                           Storyboard.TargetName="BG_normal"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                      Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           Storyboard.TargetName="ContentPresenter">
                                <EasingDoubleKeyFrame KeyTime="0"
                                                      Value="0.8" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Duration="00:00:00.0010000"
                                                           Storyboard.TargetName="BG_normal"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                      Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Duration="00:00:00.0010000"
                                                           Storyboard.TargetName="BG_hover"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                      Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           Storyboard.TargetName="ContentPresenter">
                                <EasingDoubleKeyFrame KeyTime="0"
                                                      Value="0.8" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           Storyboard.TargetName="ContentPresenter">
                                <EasingDoubleKeyFrame KeyTime="0"
                                                      Value="0.2" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                           Storyboard.TargetName="FocusBorder">
                                <DiscreteObjectKeyFrame KeyTime="0"
                                                        Value="Visible" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unfocused" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="BG_normal"
                       Margin="0"
                       Fill="{TemplateBinding Background}"
                       Stroke="{TemplateBinding BorderBrush}" />
            <Rectangle x:Name="BG_hover"
                       Margin="0"
                       Fill="{Binding (con:FrameworkElementExtensions.Brushes)[ControlHoverBackground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}"
                       Opacity="0"
                       Stroke="{TemplateBinding BorderBrush}" />
            <ContentPresenter x:Name="ContentPresenter"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Opacity="0.65" />
            <Border x:Name="FocusBorder"
                    Visibility="Collapsed"
                    BorderThickness="{StaticResource FocusedBorderThickness}"
                    BorderBrush="{Binding (con:FrameworkElementExtensions.Brushes)[FocusBorderBrush], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
        </Grid>
    </ControlTemplate>

    <Style x:Key="Style_Button_noBorder"
           TargetType="Button">
        <Setter Property="Background"
                Value="{x:Null}" />
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="Foreground"
                Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Template"
                Value="{StaticResource Template_Button_General}" />
    </Style>

    <!-- Selected Item Facet -->
    <Style x:Key="Style_FacetSelectionItem"
           TargetType="ListBoxItem">
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment"
                Value="Top" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="TabNavigation"
                Value="Local" />
        <Setter Property="Background"
                Value="{x:Null}" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid x:Name="SortListBox">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="fillColor"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.8" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="0.2" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected" />
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="fillColor"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.8" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="fillColor"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.8" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="LayoutStates">
                                <VisualState x:Name="BeforeLoaded" />
                                <VisualState x:Name="Loaded" />
                                <VisualState x:Name="Unloaded" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="fillColor"
                                   Opacity="0"
                                   StrokeThickness="0"
                                   Fill="{Binding (con:FrameworkElementExtensions.Brushes)[ControlHoverBackground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}" />
                        <ContentPresenter x:Name="contentPresenter"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          VerticalAlignment="Center"
                                          Margin="5,3"
                                          Opacity="0.65" />
                        <Rectangle x:Name="FocusVisualElement"
                                   Opacity="0"
                                   StrokeThickness="0"
                                   Fill="{Binding (con:FrameworkElementExtensions.Brushes)[ControlHoverBackground], RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Canvas}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for SortCategoryDropdown -->
    <Style x:Key="SortCategoryDropdownStyle"
           TargetType="ComboBox">
        <Setter Property="ItemContainerStyle"
                Value="{StaticResource Style_FacetSelectionItem}" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding Name}"
                               Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding"
                Value="6,2,25,2" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="{Binding BorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="TabNavigation"
                Value="Once" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="Foreground"
                Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
        <Setter Property="Opacity"
                Value="1" />
        <Setter Property="con:FrameworkElementExtensions.BackgroundProxy"
                Value="{Binding Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
        <Setter Property="con:FrameworkElementExtensions.ForegroundProxy"
                Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
        <Setter Property="con:FrameworkElementExtensions.BorderBrushProxy"
                Value="{Binding BorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
        <Setter Property="con:FrameworkElementExtensions.SecondaryBackgroundProxy"
                Value="{Binding SecondaryBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
        <Setter Property="con:FrameworkElementExtensions.SecondaryForegroundProxy"
                Value="{Binding SecondaryForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="ContentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="ContentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.2" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="FocusBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="FocusedDropDown">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="00:00:00"
                                                                       Storyboard.TargetName="PopupBorder"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="ContentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused" />
                                <VisualState x:Name="InvalidFocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="ContentPresenterBorder">
                            <Grid>
                                <ToggleButton x:Name="DropDownToggle"
                                              Background="{TemplateBinding Background}"
                                              BorderBrush="{TemplateBinding BorderBrush}"
                                              BorderThickness="{TemplateBinding BorderThickness}"
                                              HorizontalContentAlignment="Right"
                                              HorizontalAlignment="Stretch"
                                              Margin="0"
                                              Style="{StaticResource Style_ToggleButton}"
                                              VerticalAlignment="Stretch"
                                              Foreground="{TemplateBinding Foreground}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock HorizontalAlignment="Left"
                                                   Grid.Column="0"
                                                   Margin="5,0,0,0"
                                                   Foreground="{Binding SecondaryForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}"
                                                   Text="{Binding}"
                                                   TextWrapping="Wrap"
                                                   IsHitTestVisible="False"
                                                   VerticalAlignment="Center" />
                                        <ContentPresenter x:Name="ContentPresenter"
                                                          Grid.Column="1"
                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          Margin="3,-1,3,0"
                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                        <Path x:Name="BtnArrow"
                                              Stretch="Uniform"
                                              Grid.Column="2"
                                              Height="4"
                                              HorizontalAlignment="Right"
                                              Width="8"
                                              Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z "
                                              Fill="{TemplateBinding Foreground}"
                                              Margin="0,2,3,0" />
                                    </Grid>
                                </ToggleButton>
                            </Grid>
                        </Border>
                        <Popup x:Name="Popup"
                               Margin="0,0,0,1"
                               HorizontalAlignment="Left">
                            <Grid>
                                <!-- This extra border exists to correct for a Silverlight bug with DropShadowEffect. See FB 1877 -->
                                <!-- When/if the Silverlight bug is fixed, delete this border, and move its attributes to PopupBorder,
                                             and remove the Grid wrapping these two borders. -->
                                <Border BorderBrush="{Binding (con:FrameworkElementExtensions.Brushes)[FilterBorderBrush], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{Binding (con:FrameworkElementExtensions.BackgroundProxy), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}"
                                        IsHitTestVisible="False"
                                        Effect="{StaticResource PopupDropShadowEffect}" />
                                <Border x:Name="PopupBorder"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="Transparent">
                                    <ScrollViewer x:Name="ScrollViewer"
                                                  BorderThickness="0"
                                                  Padding="1"
                                                  Background="{x:Null}"
                                                  BorderBrush="{x:Null}"
                                                  Style="{StaticResource Style_ScrollViewer_SortDropdown}">
                                        <ItemsPresenter />
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Popup>
                        <Border x:Name="FocusBorder"
                                Visibility="Collapsed"
                                BorderThickness="{StaticResource FocusedBorderThickness}"
                                BorderBrush="{Binding (con:FrameworkElementExtensions.Brushes)[FocusBorderBrush], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Template for AppliedFiltersBreadcrumb -->
    <Style x:Key="AppliedFiltersBreadcrumbStyle"
           TargetType="ItemsControl">
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <con:EnforcingStackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <con:EnforcingStackPanel Orientation="Horizontal">
                        <con:FadingTextBlock Text="{Binding Item1}"
                                             ShowPopup="false"
                                             Grid.Column="0"
                                             BlockBorder="{Binding BorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}"
                                             BlockBackground="{Binding Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}"
                                             Foreground="{Binding SecondaryForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}"
                                             Margin="0,0,3,0" />
                        <con:FadingTextBlock Text="{Binding Item2}"
                                             ShowPopup="false"
                                             Grid.Column="1"
                                             BlockBorder="{Binding BorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}"
                                             BlockBackground="{Binding Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}"
                                             Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
                        <!-- Separator between categories -->
                        <Path Width="5.49609"
                              Height="5.94788"
                              Stretch="Fill"
                              Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}"
                              Grid.Column="2"
                              Opacity="0.4"
                              Data="M 391.919,283.693L 394.891,286.667L 391.919,289.641L 394.441,289.641L 397.415,286.667L 394.441,283.693L 391.919,283.693 Z "
                              HorizontalAlignment="Left"
                              VerticalAlignment="Center"
                              Margin="5,1,3,0" />
                    </con:EnforcingStackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Template for the AppliedFilters tooltip -->
    <DataTemplate x:Key="AppliedFiltersToolTipTemplate">
        <ItemsControl Margin="5"
                      ItemsSource="{Binding}"
                      MaxWidth="400">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{Binding Item1}"
                                   Grid.Column="0"
                                   Foreground="{Binding SecondaryForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}"
                                   Margin="0,0,3,0" />
                        <TextBlock Text="{Binding Item2}"
                                   TextWrapping="Wrap"
                                   Grid.Column="1"
                                   Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
                    </Grid>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

    <!-- Style for tooltips on ViewSelectionView and zoom buttons. Referenced in code-behind. -->
    <Style x:Key="ControlBarButtonTooltipStyle"
           TargetType="ToolTip">
        <Setter Property="Background"
                Value="{Binding Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
        <Setter Property="Foreground"
                Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
        <Setter Property="BorderBrush"
                Value="{Binding BorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
    </Style>

    <!-- Template for ViewSelectionView -->
    <Style x:Key="ViewSelectorStyle"
           TargetType="ListBox">
        <Setter Property="Background"
                Value="{Binding Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
        <Setter Property="BorderBrush"
                Value="{Binding BorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="TabNavigation"
                Value="Local" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Disabled" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused" />
                                <VisualState x:Name="InvalidFocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer x:Name="ScrollViewer"
                                          BorderBrush="Transparent"
                                          BorderThickness="0"
                                          Background="Transparent"
                                          Padding="{TemplateBinding Padding}"
                                          TabNavigation="{TemplateBinding TabNavigation}">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle"
                Value="{StaticResource Style_ViewSwitcherItemContainer}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal"
                                Background="Transparent" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border Background="Transparent">
                        <ContentControl Template="{Binding IconTemplate}"
                                        IsTabStop="False"
                                        IsEnabled="{Binding IsAvailable}">
                            <ToolTipService.ToolTip>
                                <ToolTip Content="{Binding ToolTip}"
                                         Style="{StaticResource ControlBarButtonTooltipStyle}">

                                </ToolTip>
                            </ToolTipService.ToolTip>
                        </ContentControl>
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for buttons with borders -->
    <Style x:Key="Style_button_border"
           TargetType="Button">
        <Setter Property="Background"
                Value="{Binding Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
        <Setter Property="BorderBrush"
                Value="{Binding BorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template"
                Value="{StaticResource Template_Button_General}" />
    </Style>

    <!-- Default style for the PivotViewer -->
    <Style TargetType="sdk:PivotViewer"
           x:Key="PivotStyle">
        <Style.Setters>
            <Setter Property="Foreground"
                    Value="{StaticResource ForegroundBrush}" />
            <Setter Property="Background"
                    Value="{StaticResource BackgroundBrush}" />
            <Setter Property="BorderBrush"
                    Value="{StaticResource BorderBrush}" />
            <Setter Property="AccentColor"
                    Value="{StaticResource AccentColor}" />
            <Setter Property="SecondaryBackground"
                    Value="{StaticResource SecondaryBackgroundBrush}" />
            <Setter Property="ControlBackground"
                    Value="{StaticResource ControlBackgroundBrush}" />
            <Setter Property="SecondaryForeground"
                    Value="{StaticResource SecondaryForegroundBrush}" />
            <Setter Property="PrimaryItemValueBackgroundColor"
                    Value="{StaticResource PrimaryItemValueBackgroundColor}" />
            <Setter Property="SecondaryItemValueBackgroundColor"
                    Value="{StaticResource SecondaryItemValueBackgroundColor}" />
            <Setter Property="IsTabStop"
                    Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="sdk:PivotViewer">
                        <Grid x:Name="PART_Container"
                              Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <!-- PivotViewer border -->
                            <Rectangle Grid.RowSpan="2"
                                       Stroke="{TemplateBinding BorderBrush}" />

                            <!-- ControlBar -->
                            <Grid Grid.Row="0"
                                  x:Name="PART_ControlBar">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <!-- ControlBar background -->
                                <Rectangle Grid.ColumnSpan="5"
                                           Fill="{TemplateBinding Background}"
                                           Stroke="{StaticResource BorderBrush}" />

                                <!-- Container for AppliedFiltersView -->
                                <ItemsControl x:Name="PART_AppliedFiltersBreadcrumb"
                                              Grid.Column="0"
                                              Margin="5,0,5,0"
                                              Style="{StaticResource AppliedFiltersBreadcrumbStyle}">
                                    <ToolTipService.ToolTip>
                                        <ToolTip x:Name="PART_AppliedFiltersToolTip"
                                                 ContentTemplate="{StaticResource AppliedFiltersToolTipTemplate}" />
                                    </ToolTipService.ToolTip>
                                </ItemsControl>

                                <!-- Container for SortPropertySelector -->
                                <ComboBox x:Name="PART_SortPropertySelector"
                                          Style="{StaticResource SortCategoryDropdownStyle}"
                                          AutomationProperties.Name="SortPropertySelector"
                                          Grid.Column="1"
                                          VerticalAlignment="Center"
                                          Height="22"
                                          Margin="0,0,5,0" />

                                <!--Container for ViewSelectionView -->
                                <ListBox x:Name="PART_ViewSelector"
                                         Style="{StaticResource ViewSelectorStyle}"
                                         Grid.Column="2"
                                         VerticalAlignment="Center"
                                         Width="60"
                                         Height="22"
                                         Margin="0,0,5,0" />

                                <!-- Container for ZoomSliderView -->
                                <Grid x:Name="PART_ZoomSliderView"
                                      Grid.Column="3"
                                      VerticalAlignment="Center"
                                      Margin="0,0,5,0"
                                      Width="146"
                                      Height="22">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="18" />
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="18" />
                                    </Grid.ColumnDefinitions>

                                    <Rectangle Stroke="{TemplateBinding BorderBrush}"
                                               Margin="0"
                                               Grid.ColumnSpan="3"
                                               Fill="{TemplateBinding Background}" />
                                    <Button x:Name="PART_ZoomOutButton"
                                            Grid.Column="0"
                                            Style="{StaticResource Style_Button_noBorder}">
                                        <Path x:Name="path"
                                              Stretch="Fill"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Width="8"
                                              Height="2.5"
                                              Data="M16,6 L16,10 0,10 0,6 z"
                                              Fill="{Binding (con:FrameworkElementExtensions.Brushes)[ControlForeground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}"
                                              Margin="0" />
                                    </Button>
                                    <con:ClickDragSlider x:Name="PART_ZoomSlider"
                                                         Width="100"
                                                         SmallChange="0"
                                                         Grid.Column="1"
                                                         Style="{StaticResource Style_ZoomSlider}"
                                                         BorderBrush="{Binding ControlBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
                                    <Button x:Name="PART_ZoomInButton"
                                            Grid.Column="2"
                                            Style="{StaticResource Style_Button_noBorder}">
                                        <Path Stretch="Fill"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Width="8"
                                              Height="8"
                                              Data="M6,0 L10,0 10,6 16,6 16,10 10,10 10,16 6,16 6,10 0,10 0,6 6,6 z"
                                              Fill="{Binding (con:FrameworkElementExtensions.Brushes)[ControlForeground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}"
                                              Margin="0" />
                                    </Button>
                                </Grid>
                            </Grid>

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemAdornerStyle">
                <Setter.Value>
                    <Style TargetType="sdk:PivotViewerItemAdorner">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="sdk:PivotViewerItemAdorner">
                                    <Grid Background="Transparent">
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal" />
                                                <VisualState x:Name="MouseOver">
                                                    <Storyboard>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                                       Storyboard.TargetName="ButtonBorder">
                                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                                  Value="1" />
                                                        </DoubleAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled" />
                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="ItemStates">
                                                <VisualState x:Name="Default" />
                                                <VisualState x:Name="IsSelected">
                                                    <Storyboard>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                                       Storyboard.TargetName="FocusedItemBorder">
                                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                                  Value="1" />
                                                        </DoubleAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>

                                        <Border x:Name="ButtonBorder"
                                                Margin="-1"
                                                BorderThickness="4"
                                                BorderBrush="{Binding (con:FrameworkElementExtensions.Brushes)[ControlHoverBackground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}"
                                                Opacity="1" />
                                        <Border x:Name="FocusedItemBorder"
                                                Margin="-1"
                                                BorderThickness="4"
                                                BorderBrush="{Binding (con:FrameworkElementExtensions.Brushes)[FocusBorderBrush], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}"
                                                Opacity="1" />
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="DetailPaneStyle">
                <Setter.Value>
                    <Style TargetType="sdk:PivotViewerDetailPane">
                        <Setter Property="Foreground"
                                Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
                        <Setter Property="Background"
                                Value="{Binding Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
                        <Setter Property="BorderBrush"
                                Value="{Binding BorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
                        <Setter Property="AccentColor"
                                Value="{Binding AccentColor, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
                        <Setter Property="Background"
                                Value="{Binding SecondaryBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
                        <Setter Property="ControlBackground"
                                Value="{Binding ControlBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
                        <Setter Property="SecondaryForeground"
                                Value="{Binding SecondaryForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
                        <Setter Property="PrimaryItemValueBackgroundColor"
                                Value="{Binding PrimaryItemValueBackgroundColor, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
                        <Setter Property="SecondaryItemValueBackgroundColor"
                                Value="{Binding SecondaryItemValueBackgroundColor, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="FilterPaneStyle">
                <Setter.Value>
                    <Style TargetType="sdk:PivotViewerFilterPane">
                        <Setter Property="Foreground"
                                Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
                        <Setter Property="Background"
                                Value="{Binding Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
                        <Setter Property="BorderBrush"
                                Value="{Binding BorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
                        <Setter Property="AccentColor"
                                Value="{Binding AccentColor, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
                        <Setter Property="SecondaryBackground"
                                Value="{Binding SecondaryBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
                        <Setter Property="ControlBackground"
                                Value="{Binding ControlBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
                        <Setter Property="ClearButtonBackground"
                                Value="{StaticResource ClearButtonCircleBackground}" />
                        <Setter Property="SecondaryForeground"
                                Value="{Binding SecondaryForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}" />
                    </Style>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <Style TargetType="views:GridLayoutView">
        <Style.Setters>
            <Setter Property="IsTabStop"
                    Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="views:GridLayoutView">
                        <ContentPresenter x:Name="GridLayoutRoot">
                            <FrameworkElement.Resources>
                                <DataTemplate x:Key="CollectionItemViewTemplate">

                                    <con:CollectionItemControl HorizontalContentAlignment="Stretch"
                                                               VerticalContentAlignment="Stretch">
                                        <con:NestableButton x:Name="MainButton"
                                                            HorizontalContentAlignment="Stretch"
                                                            VerticalContentAlignment="Stretch"
                                                            Template="{x:Null}"
                                                            DataContext="{StaticResource ViewModel}">
                                            <int:Interaction.Behaviors>
                                                <int:AttachMessageCommandContextOnLoadBehavior Target="{Binding }" />
                                            </int:Interaction.Behaviors>

                                            <con:RenderTransformInverter IsTabStop="False">
                                                <sdk:PivotViewerItemAdorner x:Name="PART_ContentContainer"
                                                                            Style="{Binding ItemAdornerStyle, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}"
                                                                            IsTabStop="False"
                                                                            DataContext="{Binding Source={StaticResource ViewModel}, Path=DataItem}"
                                                                            IsItemSelected="{Binding Source={StaticResource ViewModel}, Path=IsItemSelected}"
                                                                            IsMouseOver="{Binding ElementName=MainButton,Path=IsMouseOverInternal}" />
                                            </con:RenderTransformInverter>
                                        </con:NestableButton>

                                    </con:CollectionItemControl>

                                </DataTemplate>

                                <!-- Define this as a resource because if it's defined inline 
                                     on the ItemsControl it causes memory leaks -->
                                <ItemsPanelTemplate x:Key="SIVP">
                                    <con:SeahorseItemVirtualizingPanel x:Name="m_panel"
                                                                       ParentElement="{Binding ElementName=GridLayoutRoot, Path=(views:GridLayoutView.ViewRoot)}"
                                                                       LayoutEngine="{Binding Path=Layout.LayoutEngine}"
                                                                       ParentOffset="{Binding Path=ParentOffset, Mode=TwoWay}"
                                                                       PositionInWindow="{Binding Path=PositionInWindow, Mode=TwoWay}"
                                                                       Background="Transparent" />
                                </ItemsPanelTemplate>
                            </FrameworkElement.Resources>
                            <ItemsControl ItemsSource="{Binding Path=SeahorseItems}"
                                          ItemTemplate="{StaticResource CollectionItemViewTemplate}"
                                          ItemsPanel="{StaticResource SIVP}"
                                          IsTabStop="False" />
                        </ContentPresenter>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <Style x:Key="CustomScrollBar"
           TargetType="ScrollBar">
        <Setter Property="MinWidth"
                Value="10" />
        <Setter Property="MinHeight"
                Value="10" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Grid x:Name="Root">
                        <Grid.Resources>
                            <ControlTemplate x:Key="RepeatButtonTemplate"
                                             TargetType="RepeatButton">
                                <Grid Background="Transparent">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal" />
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate x:Key="VerticalDecrementTemplate"
                                             TargetType="RepeatButton">
                                <Grid>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                                   Storyboard.TargetName="BackgroundMouseOver">
                                                        <EasingDoubleKeyFrame KeyTime="0"
                                                                              Value="0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundMouseOver"
                                                                                   Storyboard.TargetProperty="Opacity">
                                                        <SplineDoubleKeyFrame KeyTime="0:0:0"
                                                                              Value="1" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                   Duration="00:00:00.0010000"
                                                                                   Storyboard.TargetName="pathMouseOver"
                                                                                   Storyboard.TargetProperty="(UIElement.Visibility)">
                                                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <Visibility>Visible</Visibility>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                   Duration="00:00:00.0010000"
                                                                                   Storyboard.TargetName="path"
                                                                                   Storyboard.TargetProperty="(UIElement.Visibility)">
                                                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <Visibility>Collapsed</Visibility>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                   Duration="00:00:00.0010000"
                                                                                   Storyboard.TargetName="path"
                                                                                   Storyboard.TargetProperty="(UIElement.Visibility)">
                                                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <Visibility>Collapsed</Visibility>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                   Duration="00:00:00.0010000"
                                                                                   Storyboard.TargetName="pathMouseOver"
                                                                                   Storyboard.TargetProperty="(UIElement.Visibility)">
                                                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <Visibility>Visible</Visibility>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                   Duration="00:00:00.0010000"
                                                                                   Storyboard.TargetName="BackgroundMouseOver"
                                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                              Value="1" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                   Duration="00:00:00.0010000"
                                                                                   Storyboard.TargetName="path"
                                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                              Value="0.35" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                   Duration="00:00:00.0010000"
                                                                                   Storyboard.TargetName="BackgroundMouseOver"
                                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                              Value="0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="FocusStates">
                                            <VisualState x:Name="Focused">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                   Duration="00:00:00.0010000"
                                                                                   Storyboard.TargetName="BackgroundMouseOver"
                                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                              Value="0.3" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Unfocused">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                   Duration="00:00:00.0010000"
                                                                                   Storyboard.TargetName="BackgroundMouseOver"
                                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                              Value="0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Rectangle x:Name="BackgroundMouseOver"
                                               Fill="{TemplateBinding Background}"
                                               StrokeThickness="1"
                                               Opacity="0" />
                                    <Path x:Name="path"
                                          Stretch="Uniform"
                                          Height="4"
                                          Width="6"
                                          Data="F1M2.8403,474.751C2.2273,474.751,2.0793,474.396,2.5123,473.962L7.5893,468.864C8.0213,468.43,8.7283,468.43,9.1613,468.864L14.2373,473.962C14.6703,474.396,14.5223,474.751,13.9103,474.751z"
                                          Fill="{TemplateBinding Foreground}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Opacity="0.45" />
                                    <Path x:Name="pathMouseOver"
                                          Stretch="Uniform"
                                          Height="4"
                                          Width="6"
                                          Data="F1M2.8403,474.751C2.2273,474.751,2.0793,474.396,2.5123,473.962L7.5893,468.864C8.0213,468.43,8.7283,468.43,9.1613,468.864L14.2373,473.962C14.6703,474.396,14.5223,474.751,13.9103,474.751z"
                                          Fill="{TemplateBinding Foreground}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          UseLayoutRounding="False"
                                          Visibility="Collapsed"
                                          Opacity="0.7" />
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate x:Key="VerticalThumbTemplate"
                                             TargetType="Thumb">
                                <Grid>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal" />
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundMouseOver"
                                                                                   Storyboard.TargetProperty="Opacity">
                                                        <SplineDoubleKeyFrame KeyTime="0:0:0"
                                                                              Value="1" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundPressed"
                                                                                   Storyboard.TargetProperty="Opacity">
                                                        <SplineDoubleKeyFrame KeyTime="0:0:0"
                                                                              Value="1" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Highlight"
                                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <SplineDoubleKeyFrame KeyTime="0"
                                                                              Value="1" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ThumbVisual"
                                                                                   Storyboard.TargetProperty="Opacity">
                                                        <SplineDoubleKeyFrame KeyTime="0:0:0"
                                                                              Value="0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Grid x:Name="ThumbVisual"
                                          Margin="0">
                                        <Rectangle x:Name="Background"
                                                   Fill="{TemplateBinding Background}"
                                                   StrokeThickness="1"
                                                   RadiusX="1"
                                                   RadiusY="1" />
                                        <Rectangle x:Name="BackgroundMouseOver"
                                                   Fill="{TemplateBinding Foreground}"
                                                   StrokeThickness="1"
                                                   RadiusX="1"
                                                   RadiusY="1"
                                                   Opacity="0" />
                                        <Rectangle x:Name="BackgroundPressed"
                                                   Fill="{TemplateBinding Foreground}"
                                                   StrokeThickness="1"
                                                   RadiusX="1"
                                                   RadiusY="1"
                                                   Opacity="0" />
                                        <Rectangle x:Name="Highlight"
                                                   StrokeThickness="1"
                                                   RadiusX="1"
                                                   RadiusY="1"
                                                   Margin="1"
                                                   IsHitTestVisible="false"
                                                   Opacity="0" />
                                    </Grid>
                                </Grid>
                            </ControlTemplate>
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="VerticalRoot"
                              Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Rectangle Grid.RowSpan="3"
                                       Grid.Row="1"
                                       Fill="{TemplateBinding Background}"
                                       Opacity="0.35" />
                            <RepeatButton x:Name="VerticalSmallDecrease"
                                          IsTabStop="False"
                                          Foreground="{TemplateBinding Foreground}"
                                          Background="{TemplateBinding con:PivotScrollBar.ButtonHover}"
                                          Template="{StaticResource VerticalDecrementTemplate}"
                                          Height="12"
                                          Grid.Row="0"
                                          Interval="50" />
                            <RepeatButton x:Name="VerticalLargeDecrease"
                                          IsTabStop="False"
                                          Template="{StaticResource RepeatButtonTemplate}"
                                          Height="0"
                                          Grid.Row="1"
                                          Interval="50" />
                            <Thumb x:Name="VerticalThumb"
                                   MinHeight="10"
                                   Foreground="{TemplateBinding con:PivotScrollBar.ThumbHover}"
                                   Background="{TemplateBinding Background}"
                                   Template="{StaticResource VerticalThumbTemplate}"
                                   Grid.Row="2" />
                            <RepeatButton x:Name="VerticalLargeIncrease"
                                          IsTabStop="False"
                                          Template="{StaticResource RepeatButtonTemplate}"
                                          Grid.Row="3"
                                          Interval="50" />
                            <RepeatButton x:Name="VerticalSmallIncrease"
                                          IsTabStop="False"
                                          Foreground="{TemplateBinding Foreground}"
                                          Background="{TemplateBinding con:PivotScrollBar.ButtonHover}"
                                          Template="{StaticResource VerticalDecrementTemplate}"
                                          Height="12"
                                          Grid.Row="4"
                                          Interval="50"
                                          RenderTransformOrigin="0.5,0.5">
                                <RepeatButton.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleY="-1" />
                                        <SkewTransform AngleX="0"
                                                       AngleY="0" />
                                        <RotateTransform Angle="0" />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </RepeatButton.RenderTransform>
                            </RepeatButton>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HorizontalCustomScrollBar"
           TargetType="ScrollBar">
        <Setter Property="MinWidth"
                Value="14" />
        <Setter Property="MinHeight"
                Value="14" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Grid x:Name="Root">
                        <Grid.Resources>
                            <ControlTemplate x:Key="RepeatButtonTemplate"
                                             TargetType="RepeatButton">
                                <Grid Background="Transparent">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal" />
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate x:Key="HorizontalDecrementTemplate"
                                             TargetType="RepeatButton">
                                <Grid>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                                   Storyboard.TargetName="BackgroundMouseOver">
                                                        <EasingDoubleKeyFrame KeyTime="0"
                                                                              Value="0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundMouseOver"
                                                                                   Storyboard.TargetProperty="Opacity">
                                                        <SplineDoubleKeyFrame KeyTime="0:0:0"
                                                                              Value="1" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                   Duration="00:00:00.0010000"
                                                                                   Storyboard.TargetName="pathMouseOver"
                                                                                   Storyboard.TargetProperty="(UIElement.Visibility)">
                                                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <Visibility>Visible</Visibility>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                   Duration="00:00:00.0010000"
                                                                                   Storyboard.TargetName="path"
                                                                                   Storyboard.TargetProperty="(UIElement.Visibility)">
                                                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <Visibility>Collapsed</Visibility>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                   Duration="00:00:00.0010000"
                                                                                   Storyboard.TargetName="path"
                                                                                   Storyboard.TargetProperty="(UIElement.Visibility)">
                                                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <Visibility>Collapsed</Visibility>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                   Duration="00:00:00.0010000"
                                                                                   Storyboard.TargetName="pathMouseOver"
                                                                                   Storyboard.TargetProperty="(UIElement.Visibility)">
                                                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <Visibility>Visible</Visibility>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                   Duration="00:00:00.0010000"
                                                                                   Storyboard.TargetName="BackgroundMouseOver"
                                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                              Value="1" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                   Duration="00:00:00.0010000"
                                                                                   Storyboard.TargetName="path"
                                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                              Value="0.35" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                   Duration="00:00:00.0010000"
                                                                                   Storyboard.TargetName="BackgroundMouseOver"
                                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                              Value="0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="FocusStates">
                                            <VisualState x:Name="Focused">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                   Duration="00:00:00.0010000"
                                                                                   Storyboard.TargetName="BackgroundMouseOver"
                                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                              Value="0.3" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Unfocused">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                   Duration="00:00:00.0010000"
                                                                                   Storyboard.TargetName="BackgroundMouseOver"
                                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                              Value="0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Rectangle x:Name="BackgroundMouseOver"
                                               Fill="{TemplateBinding Background}"
                                               StrokeThickness="1"
                                               Opacity="0" />
                                    <Path x:Name="path"
                                          Stretch="Uniform"
                                          Height="6"
                                          Width="4"
                                          Data="M-1.0498624,-2.7170361 C-1.0498624,-3.0179729 -0.87558415,-3.0906297 -0.66252289,-2.8780594 L1.8402105,-0.38563539 C2.0532718,-0.17355598 2.0532718,0.17352769 1.8402105,0.38609802 L-0.66252289,2.8780311 C-0.87558415,3.0906014 -1.0498624,3.0179446 -1.0498624,2.7174988 z"
                                          Fill="{TemplateBinding Foreground}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Opacity="0.45" />
                                    <Path x:Name="pathMouseOver"
                                          Stretch="Uniform"
                                          Height="6"
                                          Width="4"
                                          Data="M-1.0498624,-2.7170361 C-1.0498624,-3.0179729 -0.87558415,-3.0906297 -0.66252289,-2.8780594 L1.8402105,-0.38563539 C2.0532718,-0.17355598 2.0532718,0.17352769 1.8402105,0.38609802 L-0.66252289,2.8780311 C-0.87558415,3.0906014 -1.0498624,3.0179446 -1.0498624,2.7174988 z"
                                          Fill="{TemplateBinding Foreground}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          UseLayoutRounding="False"
                                          Visibility="Collapsed"
                                          Opacity="0.7" />
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate x:Key="HorizontalThumbTemplate"
                                             TargetType="Thumb">
                                <Grid>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ThumbVisual"
                                                                                   Storyboard.TargetProperty="Opacity">
                                                        <SplineDoubleKeyFrame KeyTime="0:0:1"
                                                                              Value="1" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundMouseOver"
                                                                                   Storyboard.TargetProperty="Opacity">
                                                        <SplineDoubleKeyFrame KeyTime="0:0:0"
                                                                              Value="1" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundPressed"
                                                                                   Storyboard.TargetProperty="Opacity">
                                                        <SplineDoubleKeyFrame KeyTime="0:0:0"
                                                                              Value="1" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Highlight"
                                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <SplineDoubleKeyFrame KeyTime="0"
                                                                              Value="1" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ThumbVisual"
                                                                                   Storyboard.TargetProperty="Opacity">
                                                        <SplineDoubleKeyFrame KeyTime="0:0:0"
                                                                              Value="0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Grid x:Name="ThumbVisual"
                                          Margin="0">
                                        <Rectangle x:Name="Background"
                                                   Fill="{TemplateBinding Background}"
                                                   StrokeThickness="1"
                                                   RadiusX="1"
                                                   RadiusY="1" />
                                        <Rectangle x:Name="BackgroundMouseOver"
                                                   Fill="{TemplateBinding Foreground}"
                                                   StrokeThickness="1"
                                                   RadiusX="1"
                                                   RadiusY="1"
                                                   Opacity="0" />
                                        <Rectangle x:Name="BackgroundPressed"
                                                   Fill="{TemplateBinding Foreground}"
                                                   StrokeThickness="1"
                                                   RadiusX="1"
                                                   RadiusY="1"
                                                   Opacity="0" />
                                        <Rectangle x:Name="Highlight"
                                                   StrokeThickness="1"
                                                   RadiusX="1"
                                                   RadiusY="1"
                                                   Margin="1"
                                                   IsHitTestVisible="false"
                                                   Opacity="0" />
                                    </Grid>
                                </Grid>
                            </ControlTemplate>
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Background="{Binding SecondaryBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewer}}">
                            <Grid x:Name="HorizontalRoot"
                                  Visibility="Collapsed"
                                  Margin="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.ColumnSpan="3"
                                           Grid.Column="1"
                                           Fill="{TemplateBinding Background}"
                                           Opacity="0.35" />
                                <RepeatButton x:Name="HorizontalSmallDecrease"
                                              IsTabStop="False"
                                              Foreground="{TemplateBinding Foreground}"
                                              Background="{TemplateBinding con:PivotScrollBar.ButtonHover}"
                                              Template="{StaticResource HorizontalDecrementTemplate}"
                                              Width="12"
                                              Grid.Column="0"
                                              Interval="50"
                                              RenderTransformOrigin="0.5,0.5">
                                    <RepeatButton.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="-1" />
                                        </TransformGroup>
                                    </RepeatButton.RenderTransform>
                                </RepeatButton>
                                <RepeatButton x:Name="HorizontalLargeDecrease"
                                              IsTabStop="False"
                                              Template="{StaticResource RepeatButtonTemplate}"
                                              Width="0"
                                              Grid.Column="1"
                                              Interval="50" />
                                <Thumb x:Name="HorizontalThumb"
                                       MinWidth="10"
                                       Foreground="{TemplateBinding con:PivotScrollBar.ThumbHover}"
                                       Background="{TemplateBinding Background}"
                                       Template="{StaticResource HorizontalThumbTemplate}"
                                       Grid.Column="2" />
                                <RepeatButton x:Name="HorizontalLargeIncrease"
                                              IsTabStop="False"
                                              Template="{StaticResource RepeatButtonTemplate}"
                                              Grid.Column="3"
                                              Interval="50" />
                                <RepeatButton x:Name="HorizontalSmallIncrease"
                                              IsTabStop="False"
                                              Foreground="{TemplateBinding Foreground}"
                                              Background="{TemplateBinding con:PivotScrollBar.ButtonHover}"
                                              Template="{StaticResource HorizontalDecrementTemplate}"
                                              Width="12"
                                              Grid.Column="4"
                                              Interval="50" />
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Begin Auxiliary FilterPane styles -->
    <!-- Style for a separator -->
    <Style x:Key="SeparatorStyle"
           TargetType="Rectangle">
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="Height"
                Value="1" />
        <Setter Property="Margin"
                Value="0,5,2,2" />
        <Setter Property="Opacity"
                Value="0.6" />
    </Style>

    <!-- Similar to ScrollViewerStyle in InfoPaneView, but differs in that it registers the scroll bar's Loaded/Unloaded events to a parent FilterPaneView -->
    <Style x:Key="FilterScrollViewerStyle"
           TargetType="ScrollViewer">
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Top" />
        <Setter Property="VerticalScrollBarVisibility"
                Value="Visible" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter x:Name="ScrollContentPresenter"
                                                    Cursor="{TemplateBinding Cursor}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    Margin="{TemplateBinding Padding}" />
                            <!-- We ancestor bind the FilterPaneView to the Tag property in order to allow our EventToCommandBehavior to find it
                                 (objects inside a collection don't have access to the visual tree, so an ancestor binding directly on the behaviors won't work -->
                            <ScrollBar x:Name="VerticalScrollBar"
                                       con:PivotScrollBar.ButtonHover="{Binding (con:FrameworkElementExtensions.Brushes)[ControlHoverBackground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}"
                                       con:PivotScrollBar.ThumbHover="{Binding (con:FrameworkElementExtensions.Brushes)[ControlHoverBackground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}"
                                       Grid.Column="1"
                                       IsTabStop="False"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       Margin="0,-1,-1,-1"
                                       Minimum="0"
                                       Orientation="Vertical"
                                       Grid.Row="0"
                                       Style="{StaticResource CustomScrollBar}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                       Value="{TemplateBinding VerticalOffset}"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Background="{Binding ControlBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}"
                                       Foreground="{TemplateBinding Foreground}"
                                       Tag="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}">
                                <int:Interaction.Behaviors>
                                    <int:EventToCommandBehavior EventName="Loaded"
                                                                Command="{Binding Tag.OnScrollBarLoadedCommand, ElementName=VerticalScrollBar}" />
                                    <int:EventToCommandBehavior EventName="Unloaded"
                                                                Command="{Binding Tag.OnScrollBarUnloadedCommand, ElementName=VerticalScrollBar}" />
                                </int:Interaction.Behaviors>
                            </ScrollBar>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for split check box content button (where facet value sits) -->
    <Style x:Key="SplitCheckboxContentButtonStyle"
           TargetType="Button">
        <Setter Property="FontSize"
                Value="11" />
        <Setter Property="AutomationProperties.Name"
                Value="{Binding AutomationNameApplyFacet}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="Grid"
                          Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ButtonGroups">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="00:00:00.0500000" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="rectangle"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0.8" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="rectangle"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.00"
                                                                       Storyboard.TargetName="textBlock"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0.35" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="FocusBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="rectangle"
                                   Margin="0,0,2,0"
                                   Height="20"
                                   VerticalAlignment="Center"
                                   Opacity="0"
                                   Fill="{Binding (con:FrameworkElementExtensions.Brushes)[ControlHoverBackground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
                        <ContentPresenter x:Name="textBlock"
                                          VerticalAlignment="Center"
                                          Margin="4,0,0,0" />
                        <Border x:Name="FocusBorder"
                                Margin="0,0,2,0"
                                Visibility="Collapsed"
                                BorderThickness="{StaticResource FocusedBorderThickness}"
                                BorderBrush="{Binding (con:FrameworkElementExtensions.Brushes)[FocusBorderBrush], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for the textblocks under the range slider -->
    <Style x:Key="RangeScopeTextBlock"
           TargetType="con:FadingTextBlock">
        <Setter Property="FontSize"
                Value="11" />
        <Setter Property="Foreground"
                Value="{Binding SecondaryForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
        <Setter Property="BlockBorder"
                Value="{Binding BorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
        <Setter Property="BlockBackground"
                Value="{Binding Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
        <Setter Property="BlockForeground"
                Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
    </Style>

    <!-- Style for the Applied Filters text -->
    <Style x:Key="AppliedFiltersStyle"
           TargetType="con:FadingTextBlock">
        <Setter Property="FontSize"
                Value="11" />
        <Setter Property="Foreground"
                Value="{Binding SecondaryForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
        <Setter Property="FontStyle"
                Value="Italic" />
        <Setter Property="HorizontalAlignment"
                Value="Left" />
        <Setter Property="BlockBorder"
                Value="{Binding BorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
        <Setter Property="BlockBackground"
                Value="{Binding Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
        <Setter Property="BlockForeground"
                Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
    </Style>

    <!-- Similar to General Button template in Controlbar -->
    <ControlTemplate x:Key="Apply_Button_Hover"
                     TargetType="Button">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Duration="00:00:00.0010000"
                                                           Storyboard.TargetName="BG_hover"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                      Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Duration="00:00:00.0010000"
                                                           Storyboard.TargetName="BG_normal"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                      Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           Storyboard.TargetName="ContentPresenter">
                                <EasingDoubleKeyFrame KeyTime="0"
                                                      Value="0.8" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Duration="00:00:00.0010000"
                                                           Storyboard.TargetName="BG_normal"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                      Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Duration="00:00:00.0010000"
                                                           Storyboard.TargetName="BG_hover"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                      Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           Storyboard.TargetName="ContentPresenter">
                                <EasingDoubleKeyFrame KeyTime="0"
                                                      Value="0.8" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           Storyboard.TargetName="ContentPresenter">
                                <EasingDoubleKeyFrame KeyTime="0"
                                                      Value="0.2" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                           Storyboard.TargetName="FocusBorder">
                                <DiscreteObjectKeyFrame KeyTime="0"
                                                        Value="Visible" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unfocused" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="BG_normal"
                       Margin="0"
                       Fill="{TemplateBinding Background}"
                       Stroke="{TemplateBinding BorderBrush}" />
            <Rectangle x:Name="BG_hover"
                       Margin="0"
                       Fill="{Binding (con:FrameworkElementExtensions.Brushes)[ControlHoverBackground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}"
                       Opacity="0"
                       Stroke="{TemplateBinding BorderBrush}" />
            <ContentPresenter x:Name="ContentPresenter"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Opacity="0.65" />
            <Border x:Name="FocusBorder"
                    Visibility="Collapsed"
                    BorderThickness="{StaticResource FocusedBorderThickness}"
                    BorderBrush="{Binding (con:FrameworkElementExtensions.Brushes)[FocusBorderBrush], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
        </Grid>
    </ControlTemplate>

    <Style x:Key="Style_Apply_Button_Hover"
           TargetType="Button">
        <Setter Property="Background"
                Value="{x:Null}" />
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Template"
                Value="{StaticResource Apply_Button_Hover}" />
    </Style>

    <!-- SortButton -->
    <Style x:Key="SortButton"
           TargetType="con:CycleButton">
        <Setter Property="Foreground"
                Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="Padding"
                Value="3,0,3,3" />
        <Setter Property="Margin"
                Value="0,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="con:CycleButton">
                    <Grid x:Name="Grid"
                          Margin="{TemplateBinding Margin}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="BG_hover"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="BG_normal"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="SortTextBlock">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.8" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="textBlock">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.8" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="BG_normal"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="BG_hover"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="SortTextBlock">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.8" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="textBlock">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.8" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="BG_normal"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="SortTextBlock">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.35" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="textBlock">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.35" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="FocusBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="BG_normal"
                                   Grid.ColumnSpan="2"
                                   Margin="0,1,0,2"
                                   Fill="{Binding (con:FrameworkElementExtensions.Brushes)[SecondaryControlBackground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}"
                                   Stroke="{TemplateBinding BorderBrush}" />
                        <Rectangle x:Name="BG_hover"
                                   Grid.ColumnSpan="2"
                                   Margin="0,1,0,2"
                                   Fill="{Binding (con:FrameworkElementExtensions.Brushes)[SecondaryControlHoverBackground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}"
                                   Opacity="0" />
                        <TextBlock x:Name="textBlock"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedItem}"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   Padding="{TemplateBinding Padding}"
                                   FontSize="{TemplateBinding FontSize}"
                                   Foreground="{TemplateBinding Foreground}"
                                   Grid.Column="1"
                                   Opacity="0.65"
                                   Margin="0,1,0,0" />
                        <TextBlock x:Name="SortTextBlock"
                                   Text="{Binding SortString}"
                                   VerticalAlignment="Center"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   FontSize="{TemplateBinding FontSize}"
                                   Foreground="{TemplateBinding Foreground}"
                                   Padding="2,1,0,3"
                                   IsHitTestVisible="False"
                                   Opacity="0.65" />
                        <Border x:Name="FocusBorder"
                                Grid.ColumnSpan="2"
                                Margin="0,1,0,2"
                                Visibility="Collapsed"
                                BorderThickness="{StaticResource FocusedBorderThickness}"
                                BorderBrush="{Binding (con:FrameworkElementExtensions.Brushes)[FocusBorderBrush], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for all facet category names -->
    <Style x:Key="FacetCategoryNameStyle"
           TargetType="con:FadingTextBlock">
        <Setter Property="FontSize"
                Value="12" />
        <Setter Property="FontWeight"
                Value="Normal" />
        <Setter Property="Foreground"
                Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
        <Setter Property="BlockBorder"
                Value="{Binding BorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
        <Setter Property="BlockBackground"
                Value="{Binding Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
        <Setter Property="BlockForeground"
                Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
    </Style>

    <!-- ClearAllButton -->
    <Style x:Key="ClearAllButton"
           TargetType="Button">
        <Setter Property="IsTabStop"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="Grid"
                          VerticalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="20" />
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ButtonGroups">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="00:00:00.1000000" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="textBlock"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0.8" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="xpath"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0.9" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="hoverCircle"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="rectangle"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00"
                                                                    Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="rectangle"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="textBlock"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0.8" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="hoverCircle"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="xpath"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="rectangle"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00"
                                                                    Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="rectangle"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="textBlock"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0.2" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="xpath"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0.2" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="hoverCircle"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0.2" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="Grid"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="FocusBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="rectangle"
                                   RadiusX="1"
                                   RadiusY="1"
                                   Opacity="0"
                                   Fill="{Binding (con:FrameworkElementExtensions.Brushes)[ControlHoverBackground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}"
                                   Grid.ColumnSpan="2" />
                        <Grid x:Name="hoverCircle"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Width="13"
                              Height="13"
                              Grid.Column="1">
                            <Ellipse Fill="{Binding ClearButtonBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}"
                                     Margin="1" />
                            <Ellipse Stroke="{Binding BorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
                        </Grid>
                        <Path x:Name="xpath"
                              Fill="{Binding SecondaryBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}"
                              Stretch="Fill"
                              Stroke="{x:Null}"
                              HorizontalAlignment="Center"
                              Width="7"
                              Height="7"
                              Data="M0.828125,0.78125 L2.7655625,-1.1561875 5.6726565,1.7509065 8.5646333,-1.1412444 10.495416,0.78963851 7.5961006,3.6890577 10.487999,6.5813119 8.5574866,8.5120404 5.6579467,5.6122195 2.7507795,8.5196685 0.81243221,6.5812085 3.7199218,3.6734559 z"
                              RenderTransformOrigin="0.5,0.5"
                              VerticalAlignment="Center"
                              Grid.Column="1"
                              Opacity="1" />
                        <TextBlock x:Name="textBlock"
                                   Style="{StaticResource ButtonTextStyle}"
                                   Foreground="{TemplateBinding Foreground}"
                                   Text="{TemplateBinding Content}"
                                   VerticalAlignment="Center"
                                   Margin="4,0,0,2"
                                   TextAlignment="Right"
                                   Opacity="0.4" />
                        <Border x:Name="FocusBorder"
                                Grid.ColumnSpan="2"
                                Visibility="Collapsed"
                                BorderThickness="{StaticResource FocusedBorderThickness}"
                                BorderBrush="{Binding (con:FrameworkElementExtensions.Brushes)[FocusBorderBrush], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Checkbox -->
    <Style x:Key="Checkbox"
           TargetType="con:ManualToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="00:00:00.1" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="HoverBox"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="HoverBox"
                                                                       Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="HoverBox"
                                                                       Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="0.25"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="TopLevel" />
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="0"
                                                                       Storyboard.TargetName="CheckBox"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="HoverBox"
                                                                       Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0.9" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="HoverBox"
                                                                       Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0.9" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="path" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="FocusBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="TopLevel">
                            <Rectangle x:Name="HoverBox"
                                       Width="16"
                                       Height="16"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       RadiusX="1"
                                       RadiusY="1"
                                       Opacity="0"
                                       Fill="{Binding (con:FrameworkElementExtensions.Brushes)[ControlHoverBackground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}"
                                       RenderTransformOrigin="0.5,0.5">
                                <Rectangle.RenderTransform>
                                    <ScaleTransform ScaleX="0.8"
                                                    ScaleY="0.8" />
                                </Rectangle.RenderTransform>
                            </Rectangle>
                            <Rectangle x:Name="CheckBox"
                                       Width="16"
                                       Height="16"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Opacity="0.35"
                                       Fill="{Binding ControlBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}"
                                       Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}"
                                       RenderTransformOrigin="0.5,0.5">
                                <Rectangle.RenderTransform>
                                    <ScaleTransform ScaleX="0.8"
                                                    ScaleY="0.8" />
                                </Rectangle.RenderTransform>
                            </Rectangle>
                            <Path x:Name="path"
                                  Opacity="0"
                                  Stretch="Fill"
                                  Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}"
                                  Width="11"
                                  Height="10"
                                  Data="F1 M 0,6 L 2.25,4.35 4.48,6.71 8.98,0 11,1.78 4.78,10 z" />
                            <Border x:Name="FocusBorder"
                                    Margin="-1,0,-1,0"
                                    Visibility="Collapsed"
                                    BorderThickness="{StaticResource FocusedBorderThickness}"
                                    BorderBrush="{Binding (con:FrameworkElementExtensions.Brushes)[FocusBorderBrush], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleFacetCheckbox"
           TargetType="con:ManualToggleButton"
           BasedOn="{StaticResource Checkbox}">
        <Setter Property="AutomationProperties.Name"
                Value="{Binding AutomationNameToggleFacet}" />
    </Style>

    <!-- Style for the calendar button (not day button, this is for months and years) -->
    <Style x:Key="Style_CalendarButton"
           TargetType="primitives:CalendarButton">
        <Setter Property="Background"
                Value="{Binding (con:FrameworkElementExtensions.Brushes)[SecondaryControlBackground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}" />
        <Setter Property="FontSize"
                Value="10" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="MinWidth"
                Value="40" />
        <Setter Property="MinHeight"
                Value="42" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="primitives:CalendarButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Background"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To=".5"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Background"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To=".5"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To=".75"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Active" />
                                <VisualState x:Name="Inactive">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content"
                                                                       Storyboard.TargetProperty="Visibility"
                                                                       Duration="0">
                                            <ObjectAnimationUsingKeyFrames.KeyFrames>
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="Collapsed" />
                                            </ObjectAnimationUsingKeyFrames.KeyFrames>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InactiveContent"
                                                                       Storyboard.TargetProperty="Visibility"
                                                                       Duration="0">
                                            <ObjectAnimationUsingKeyFrames.KeyFrames>
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames.KeyFrames>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CalendarButtonFocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="CalendarButtonFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual"
                                                                       Storyboard.TargetProperty="Visibility"
                                                                       Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="CalendarButtonUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual"
                                                                       Storyboard.TargetProperty="Visibility"
                                                                       Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Collapsed" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Rectangle x:Name="SelectedBackground"
                                   RadiusX="1"
                                   RadiusY="1"
                                   Opacity="0"
                                   Fill="{TemplateBinding Background}" />
                        <Rectangle x:Name="Background"
                                   RadiusX="1"
                                   RadiusY="1"
                                   Opacity="0"
                                   Fill="{TemplateBinding Background}" />

                        <ContentControl x:Name="Content"
                                        IsTabStop="False"
                                        Foreground="{Binding (con:FrameworkElementExtensions.ForegroundProxy), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}"
                                        Content="{TemplateBinding Content}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        FontSize="{TemplateBinding FontSize}"
                                        Margin="1,0,1,1" />
                        <ContentControl x:Name="InactiveContent"
                                        Visibility="Collapsed"
                                        IsTabStop="False"
                                        Foreground="{Binding (con:FrameworkElementExtensions.SecondaryForegroundProxy), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}"
                                        Content="{TemplateBinding Content}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        FontSize="{TemplateBinding FontSize}"
                                        Margin="1,0,1,1" />

                        <Rectangle x:Name="FocusVisual"
                                   Visibility="Collapsed"
                                   IsHitTestVisible="false"
                                   RadiusX="1"
                                   RadiusY="1"
                                   Stroke="{Binding (con:FrameworkElementExtensions.Brushes)[FilterBorderBrush], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for the calendar day button -->
    <Style x:Key="Style_DayButton"
           TargetType="primitives:CalendarDayButton">
        <Setter Property="Background"
                Value="{Binding (con:FrameworkElementExtensions.Brushes)[ControlHoverBackground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}" />
        <Setter Property="MinWidth"
                Value="5" />
        <Setter Property="MinHeight"
                Value="5" />
        <Setter Property="FontSize"
                Value="10" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="primitives:CalendarDayButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Background"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To=".5"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Background"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To=".5"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Background"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="Content"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To=".35"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To=".75"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CalendarButtonFocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="CalendarButtonFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual"
                                                                       Storyboard.TargetProperty="Visibility"
                                                                       Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="CalendarButtonUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual"
                                                                       Storyboard.TargetProperty="Visibility"
                                                                       Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Collapsed" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Active" />
                                <VisualState x:Name="Inactive">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Duration="0">
                                            <ObjectAnimationUsingKeyFrames.KeyFrames>
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="Collapsed" />
                                            </ObjectAnimationUsingKeyFrames.KeyFrames>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InactiveContent"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Duration="0">
                                            <ObjectAnimationUsingKeyFrames.KeyFrames>
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames.KeyFrames>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DayStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="RegularDay" />
                                <VisualState x:Name="Today">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="TodayBackground"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TodayContent"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Duration="0">
                                            <ObjectAnimationUsingKeyFrames.KeyFrames>
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames.KeyFrames>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BlackoutDayStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="NormalDay" />
                                <VisualState x:Name="BlackoutDay">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BlackoutVisual"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.5"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Rectangle x:Name="TodayBackground"
                                   Opacity="0"
                                   Fill="{Binding (con:FrameworkElementExtensions.Brushes)[ControlHoverBackground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}" />
                        <Rectangle x:Name="SelectedBackground"
                                   Opacity="0"
                                   Fill="{TemplateBinding Background}" />
                        <Rectangle x:Name="Background"
                                   Opacity="0"
                                   Fill="{TemplateBinding Background}" />

                        <ContentControl x:Name="Content"
                                        IsTabStop="False"
                                        Content="{TemplateBinding Content}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        FontSize="{TemplateBinding FontSize}"
                                        Foreground="{Binding (con:FrameworkElementExtensions.ForegroundProxy), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}"
                                        Margin="5,1,5,1">
                        </ContentControl>
                        <ContentControl x:Name="InactiveContent"
                                        Visibility="Collapsed"
                                        IsTabStop="False"
                                        Content="{TemplateBinding Content}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        FontSize="{TemplateBinding FontSize}"
                                        Foreground="{Binding (con:FrameworkElementExtensions.SecondaryForegroundProxy), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}"
                                        Margin="5,1,5,1">
                        </ContentControl>
                        <ContentControl x:Name="TodayContent"
                                        Visibility="Collapsed"
                                        IsTabStop="False"
                                        Content="{TemplateBinding Content}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        FontSize="{TemplateBinding FontSize}"
                                        Foreground="{Binding (con:FrameworkElementExtensions.Brushes)[ControlForeground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}"
                                        Margin="5,1,5,1">
                        </ContentControl>

                        <Path x:Name="BlackoutVisual"
                              Opacity="0"
                              Margin="3"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch"
                              RenderTransformOrigin="0.5,0.5"
                              Fill="{Binding (con:FrameworkElementExtensions.Brushes)[ControlForeground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}"
                              Stretch="Fill"
                              Data="M8.1772461,11.029181 L10.433105,11.029181 L11.700684,12.801641 L12.973633,11.029181 L15.191895,11.029181 L12.844727,13.999395 L15.21875,17.060919 L12.962891,17.060919 L11.673828,15.256231 L10.352539,17.060919 L8.1396484,17.060919 L10.519043,14.042364 z" />
                        <Rectangle x:Name="FocusVisual"
                                   Visibility="Collapsed"
                                   IsHitTestVisible="false"
                                   Stroke="{Binding (con:FrameworkElementExtensions.ForegroundProxy), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Custom calendar item style -->
    <Style x:Key="CustomCalendarItemStyle"
           TargetType="primitives:CalendarItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="primitives:CalendarItem">
                    <Grid>
                        <Grid.Resources>
                            <SolidColorBrush x:Key="DisabledBrush"
                                             Color="#8CFFFFFF" />
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DisabledVisual"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                Margin="0,2,0,2"
                                CornerRadius="1">
                            <Grid Margin="2, 2, 2, 2">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <Grid.Resources>
                                    <ControlTemplate x:Key="HeaderButtonTemplate"
                                                     TargetType="Button">
                                        <Grid Cursor="Hand">
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualState x:Name="Normal" />
                                                    <VisualState x:Name="MouseOver">
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content"
                                                                                           Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                                           Duration="0">
                                                                <ObjectAnimationUsingKeyFrames.KeyFrames>
                                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                                            Value="Collapsed" />
                                                                </ObjectAnimationUsingKeyFrames.KeyFrames>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverContent"
                                                                                           Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                                           Duration="0">
                                                                <ObjectAnimationUsingKeyFrames.KeyFrames>
                                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                                            Value="Visible" />
                                                                </ObjectAnimationUsingKeyFrames.KeyFrames>
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Disabled">
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetName="Content"
                                                                             Storyboard.TargetProperty="Opacity"
                                                                             To=".5"
                                                                             Duration="0" />
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>

                                            <ContentControl x:Name="Content"
                                                            IsTabStop="False"
                                                            Foreground="{Binding (con:FrameworkElementExtensions.ForegroundProxy), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}"
                                                            Content="{TemplateBinding Content}"
                                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                                            Margin="1,5,1,9"
                                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                            <ContentControl x:Name="MouseOverContent"
                                                            Visibility="Collapsed"
                                                            IsTabStop="False"
                                                            Foreground="{Binding (con:FrameworkElementExtensions.Brushes)[ControlHoverBackground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}"
                                                            Content="{TemplateBinding Content}"
                                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                                            Margin="1,5,1,9"
                                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                        </Grid>
                                    </ControlTemplate>

                                    <DataTemplate x:Name="DayTitleTemplate">
                                        <TextBlock FontWeight="Bold"
                                                   FontSize="9.5"
                                                   Text="{Binding}"
                                                   Margin="0,4,0,4"
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Center" />
                                    </DataTemplate>

                                    <ControlTemplate x:Key="PreviousButtonTemplate"
                                                     TargetType="Button">
                                        <Grid Cursor="Hand">
                                            <Grid.Resources>
                                                <Style x:Key="IconPathStyle"
                                                       TargetType="Path">
                                                    <Setter Property="Margin"
                                                            Value="14,-6,0,0" />
                                                    <Setter Property="Height"
                                                            Value="10" />
                                                    <Setter Property="Width"
                                                            Value="6" />
                                                    <Setter Property="Stretch"
                                                            Value="Fill" />
                                                    <Setter Property="VerticalAlignment"
                                                            Value="Center" />
                                                    <Setter Property="HorizontalAlignment"
                                                            Value="Left" />
                                                    <Setter Property="Data"
                                                            Value="M288.75,232.25 L288.75,240.625 L283,236.625 z" />
                                                </Style>
                                            </Grid.Resources>
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualState x:Name="Normal" />
                                                    <VisualState x:Name="MouseOver">
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IconPath"
                                                                                           Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                                           Duration="0">
                                                                <ObjectAnimationUsingKeyFrames.KeyFrames>
                                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                                            Value="Collapsed" />
                                                                </ObjectAnimationUsingKeyFrames.KeyFrames>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverIconPath"
                                                                                           Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                                           Duration="0">
                                                                <ObjectAnimationUsingKeyFrames.KeyFrames>
                                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                                            Value="Visible" />
                                                                </ObjectAnimationUsingKeyFrames.KeyFrames>
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Disabled">
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetName="IconPath"
                                                                             Storyboard.TargetProperty="(Path.Fill).(Brush.Opacity)"
                                                                             To=".5"
                                                                             Duration="0" />
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>

                                            <Rectangle Fill="Transparent"
                                                       Stretch="Fill"
                                                       Opacity="1" />
                                            <Path x:Name="IconPath"
                                                  Style="{StaticResource IconPathStyle}"
                                                  Fill="{Binding (con:FrameworkElementExtensions.Brushes)[ControlForeground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}" />
                                            <Path x:Name="MouseOverIconPath"
                                                  Style="{StaticResource IconPathStyle}"
                                                  Visibility="Collapsed"
                                                  Fill="{Binding (con:FrameworkElementExtensions.Brushes)[ControlHoverBackground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}" />
                                        </Grid>
                                    </ControlTemplate>

                                    <ControlTemplate x:Key="NextButtonTemplate"
                                                     TargetType="Button">
                                        <Grid Cursor="Hand">
                                            <Grid.Resources>
                                                <Style x:Key="IconPathStyle"
                                                       TargetType="Path">
                                                    <Setter Property="Margin"
                                                            Value="0,-6,14,0" />
                                                    <Setter Property="Height"
                                                            Value="10" />
                                                    <Setter Property="Width"
                                                            Value="6" />
                                                    <Setter Property="Stretch"
                                                            Value="Fill" />
                                                    <Setter Property="VerticalAlignment"
                                                            Value="Center" />
                                                    <Setter Property="HorizontalAlignment"
                                                            Value="Right" />
                                                    <Setter Property="Data"
                                                            Value="M282.875,231.875 L282.875,240.375 L288.625,236 z" />
                                                </Style>
                                            </Grid.Resources>
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualState x:Name="Normal" />
                                                    <VisualState x:Name="MouseOver">
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IconPath"
                                                                                           Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                                           Duration="0">
                                                                <ObjectAnimationUsingKeyFrames.KeyFrames>
                                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                                            Value="Collapsed" />
                                                                </ObjectAnimationUsingKeyFrames.KeyFrames>
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverIconPath"
                                                                                           Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                                           Duration="0">
                                                                <ObjectAnimationUsingKeyFrames.KeyFrames>
                                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                                            Value="Visible" />
                                                                </ObjectAnimationUsingKeyFrames.KeyFrames>
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Disabled">
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetName="IconPath"
                                                                             Storyboard.TargetProperty="(Path.Fill).(Brush.Opacity)"
                                                                             To=".5"
                                                                             Duration="0" />
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>

                                            <Rectangle Fill="Transparent"
                                                       Stretch="Fill"
                                                       Opacity="1" />

                                            <Path x:Name="IconPath"
                                                  Style="{StaticResource IconPathStyle}"
                                                  Fill="{Binding (con:FrameworkElementExtensions.Brushes)[ControlForeground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}" />
                                            <Path x:Name="MouseOverIconPath"
                                                  Style="{StaticResource IconPathStyle}"
                                                  Visibility="Collapsed"
                                                  Fill="{Binding (con:FrameworkElementExtensions.Brushes)[ControlHoverBackground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}" />
                                        </Grid>
                                    </ControlTemplate>
                                </Grid.Resources>

                                <Button x:Name="PreviousButton"
                                        Height="20"
                                        Width="28"
                                        Visibility="Collapsed"
                                        Template="{StaticResource PreviousButtonTemplate}"
                                        HorizontalAlignment="Left" />

                                <Button x:Name="HeaderButton"
                                        Grid.Column="1"
                                        FontWeight="Bold"
                                        FontSize="10.5"
                                        Template="{StaticResource HeaderButtonTemplate}"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center" />

                                <Button x:Name="NextButton"
                                        Grid.Column="2"
                                        Height="20"
                                        Width="28"
                                        Visibility="Collapsed"
                                        Template="{StaticResource NextButtonTemplate}"
                                        HorizontalAlignment="Right" />

                                <Grid x:Name="MonthView"
                                      Grid.Row="1"
                                      Grid.ColumnSpan="3"
                                      Visibility="Collapsed"
                                      Margin="6,-1,6,6">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                </Grid>

                                <Grid x:Name="YearView"
                                      Grid.Row="1"
                                      Grid.ColumnSpan="3"
                                      Visibility="Collapsed"
                                      Margin="6,-3,7,6">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                </Grid>
                            </Grid>
                        </Border>

                        <Rectangle x:Name="DisabledVisual"
                                   Opacity="0"
                                   Visibility="Collapsed"
                                   Stretch="Fill"
                                   RadiusX="2"
                                   RadiusY="2"
                                   StrokeThickness="1"
                                   Stroke="{StaticResource DisabledBrush}"
                                   Fill="{StaticResource DisabledBrush}"
                                   Margin="0,2,0,2" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Custom calendar style-->
    <Style x:Key="CustomCalendarStyle"
           TargetType="syscon:Calendar">
        <Setter Property="Foreground"
                Value="{Binding (con:FrameworkElementExtensions.ForegroundProxy), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}" />
        <Setter Property="CalendarDayButtonStyle"
                Value="{StaticResource Style_DayButton}" />
        <Setter Property="CalendarButtonStyle"
                Value="{StaticResource Style_CalendarButton}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="syscon:Calendar">
                    <StackPanel x:Name="Root"
                                HorizontalAlignment="Center">
                        <primitives:CalendarItem x:Name="CalendarItem"
                                                 Style="{StaticResource CustomCalendarItemStyle}"
                                                 Background="{Binding (con:FrameworkElementExtensions.BackgroundProxy), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}"
                                                 BorderBrush="{Binding (con:FrameworkElementExtensions.BorderBrushProxy), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}"
                                                 BorderThickness="1" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- AvailableRangeDatePicker style -->
    <Style x:Key="AvailableRangeDatePickerStyle"
           TargetType="con:LabeledAvailableRangeDatePicker">
        <Setter Property="IsTodayHighlighted"
                Value="True" />
        <Setter Property="SelectedDateFormat"
                Value="Short" />
        <Setter Property="CalendarStyle"
                Value="{StaticResource CustomCalendarStyle}" />
        <Setter Property="con:FrameworkElementExtensions.BackgroundProxy"
                Value="{Binding SecondaryBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
        <Setter Property="con:FrameworkElementExtensions.ForegroundProxy"
                Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
        <Setter Property="con:FrameworkElementExtensions.BorderBrushProxy"
                Value="{Binding BorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
        <Setter Property="con:FrameworkElementExtensions.SecondaryBackgroundProxy"
                Value="{Binding Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
        <Setter Property="con:FrameworkElementExtensions.SecondaryForegroundProxy"
                Value="{Binding SecondaryForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
        <Setter Property="AccentColor"
                Value="{Binding AccentColor, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="con:LabeledAvailableRangeDatePicker">
                    <Grid x:Name="Root">
                        <Grid.Resources>
                            <SolidColorBrush x:Key="DatePickerDisabledBrush"
                                             Color="#FFFFFFFF"
                                             Opacity="0.55" />
                            <!-- Button Template -->
                            <ControlTemplate x:Key="DropDownButtonTemplate"
                                             TargetType="con:LabeledButton">
                                <Grid>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_StackPanel"
                                                                                   Storyboard.TargetProperty="Opacity">
                                                        <SplineDoubleKeyFrame KeyTime="0"
                                                                              Value="0.5" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="FocusStates">
                                            <VisualState x:Name="Focused">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                                   Storyboard.TargetName="FocusBorder">
                                                        <DiscreteObjectKeyFrame KeyTime="0"
                                                                                Value="Visible" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Unfocused" />
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="HighlightStates">
                                            <VisualState x:Name="Unhighlighted" />
                                            <VisualState x:Name="Highlighted">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Hover"
                                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <DiscreteObjectKeyFrame KeyTime="0"
                                                                                Value="1" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>

                                    <!--Start UI-->
                                    <Rectangle x:Name="PART_Hover"
                                               Opacity="0"
                                               Fill="{Binding (con:FrameworkElementExtensions.Brushes)[ControlHoverBackground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />

                                    <StackPanel x:Name="PART_StackPanel"
                                                Orientation="Horizontal"
                                                IsHitTestVisible="False"
                                                Background="Transparent"
                                                VerticalAlignment="Center"
                                                Margin="0,2">
                                        <TextBlock Margin="3,0,3,0"
                                                   Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}"
                                                   Text="{TemplateBinding Label}" />
                                        <TextBlock Margin="3,0,3,0"
                                                   Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}"
                                                   Text="{TemplateBinding Content}" />
                                        <Grid Background="Transparent">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="16" />
                                                <ColumnDefinition Width="10" />
                                            </Grid.ColumnDefinitions>
                                            <Image Width="16"
                                                   Height="13"
                                                   HorizontalAlignment="Left"
                                                   VerticalAlignment="Center"
                                                   Source="/System.Windows.Controls.Pivot;component/Assets/DateGrid.png" />
                                            <Path x:Name="DropDownArrow"
                                                  Grid.Column="1"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}"
                                                  Stretch="Fill"
                                                  Width="5"
                                                  Height="3"
                                                  Data="F1M9.6934,474.8164C8.7624,475.7274,7.2374,475.7274,6.3054,474.8164L5.6164,474.1424C4.6844,473.2304,3.1594,471.7414,2.2274,470.8294L1.5394,470.1564C0.6074,469.2444,0.9124,468.5004,2.2164,468.5004L5.6284,468.5004L10.3704,468.5004L13.7824,468.5004C15.0874,468.5004,15.3904,469.2444,14.4594,470.1564L13.7694,470.8294C12.8384,471.7414,11.3124,473.2324,10.3814,474.1444z" />
                                        </Grid>
                                    </StackPanel>

                                    <Border x:Name="FocusBorder"
                                            Visibility="Collapsed"
                                            BorderThickness="{StaticResource FocusedBorderThickness}"
                                            BorderBrush="{Binding (con:FrameworkElementExtensions.Brushes)[FocusBorderBrush], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
                                    <!--End UI-->
                                </Grid>
                            </ControlTemplate>
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DisabledVisual"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <!-- Note: we bind AutoBlackoutDatePicker.SelectedDateString to Button.Content so we can grab it in 
                         DropDownButtonTemplate and display it in a textblock -->
                        <con:LabeledButton x:Name="Button"
                                           Label="{TemplateBinding Label}"
                                           Template="{StaticResource DropDownButtonTemplate}"
                                           HorizontalContentAlignment="Left"
                                           Content="{TemplateBinding SelectedDateString}" />
                        <Grid x:Name="DisabledVisual"
                              Opacity="0"
                              IsHitTestVisible="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Rectangle Fill="{StaticResource DatePickerDisabledBrush}" />
                            <Rectangle Fill="{StaticResource DatePickerDisabledBrush}"
                                       Grid.Column="1"
                                       Height="18"
                                       Width="19"
                                       Margin="2,0,2,0" />
                        </Grid>
                        <Popup x:Name="Popup" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for an ItemsControl containing a list of normal Facets -->
    <Style x:Key="StringFacetsItemsControlStyle"
           TargetType="ItemsControl">
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ItemsControl">
                    <ScrollViewer x:Name="PART_StringFacetScrollViewer"
                                  VerticalScrollBarVisibility="Auto"
                                  HorizontalScrollBarVisibility="Disabled"
                                  Style="{StaticResource FilterScrollViewerStyle}"
                                  Background="Transparent">

                        <int:Interaction.Behaviors>
                            <int:ScrollToTopOnChangeBehavior MonitoredTarget="{Binding Facets}" />
                            <int:HandleMouseWheel />
                        </int:Interaction.Behaviors>
                        <ItemsPresenter />
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel VerticalAlignment="Top" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Style_SuggestionListBoxItem"
           TargetType="ListBoxItem">
        <Setter Property="Padding"
                Value="4,3,4,3" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Top" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="TabNavigation"
                Value="Local" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="fillColor"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.8" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="0.2" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected" />
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="fillColor"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.8" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="fillColor"
                                   Fill="{Binding (con:FrameworkElementExtensions.Brushes)[ControlHoverBackground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Grid, AncestorLevel=4}}"
                                   IsHitTestVisible="False"
                                   Opacity="0" />
                        <ContentPresenter x:Name="contentPresenter"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          Opacity="0.65" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Header template for facet category. (Left pane accordion header) -->
    <DataTemplate x:Key="FacetCategoryHeaderTemplate">
        <!-- Facet category title and clear button -->
        <Grid Margin="4,0,0,0"
              HorizontalAlignment="Stretch"
              views:ViewBehaviors.Model="{Binding Model}"
              views:ViewBehaviors.ViewModel="{Binding}"
              DataContext="{Binding}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <con:FadingTextBlock x:Name="m_categoryName"
                                 Text="{Binding Name}"
                                 AutomationProperties.Name="{Binding Name}"
                                 Style="{StaticResource FacetCategoryNameStyle}"
                                 Grid.Column="0"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Center"
                                 Margin="0,6,0,6" />

            <Button x:Name="m_clearButton"
                    Style="{StaticResource ClearAllButton}"
                    Foreground="{StaticResource ForegroundBrush}"
                    AutomationProperties.Name="{Binding AutomationNameClearCategory}"
                    Grid.Column="1">
                <int:Interaction.Behaviors>
                    <int:MouseLeftClickBehavior Command="{Binding ClearCategoryCommand}" />
                </int:Interaction.Behaviors>
            </Button>
        </Grid>
    </DataTemplate>

    <!-- DataTemplateSelectorControl that contains and selects the DataTemplate to use for each type of FacetCategory -->
    <DataTemplate x:Name="FacetCategoryTemplate">
        <con:DataTemplateSelectorControl Content="{Binding}"
                                         HorizontalContentAlignment="Stretch"
                                         IsTabStop="False">
            <con:DataTemplateSelectorControl.Resources>

                <!-- Default DataTemplate for a facetcategory -->
                <DataTemplate x:Key="DefaultDataTemplate">
                    <ContentPresenter Content="{Binding}" />
                </DataTemplate>

                <!-- DataTemplate for FacetCategory that contains decimal facets -->
                <DataTemplate x:Key="RangeFacetCategoryViewModelTemplate">
                    <Grid x:Name="LayoutRoot"
                          Margin="5,2,5,0"
                          HorizontalAlignment="Stretch"
                          views:ViewBehaviors.Model="{Binding Model}"
                          views:ViewBehaviors.ViewModel="{Binding}">
                        <Grid HorizontalAlignment="Stretch"
                              DataContext="{Binding}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="20" />
                                <RowDefinition Height="75" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <!-- Predicate Label -->
                            <con:FadingTextBlock x:Name="m_predicateLabel"
                                                 Grid.Row="0"
                                                 Grid.ColumnSpan="2"
                                                 Text="{Binding PredicateLabel}"
                                                 Style="{StaticResource AppliedFiltersStyle}" />

                            <!-- Histogram behind the slider -->
                            <ItemsControl Grid.Row="1"
                                          Grid.ColumnSpan="2"
                                          Height="75"
                                          x:Name="container"
                                          ItemsSource="{Binding HistogramBars}"
                                          IsTabStop="False">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Rectangle x:Name="normalbar"
                                                       Fill="{Binding ControlBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}"
                                                       Margin="2,0,2,0"
                                                       VerticalAlignment="Stretch"
                                                       RenderTransform="{Binding RenderTransform}"
                                                       RenderTransformOrigin="0,1" />
                                            <Rectangle x:Name="highlightbar"
                                                       Fill="{Binding (con:FrameworkElementExtensions.Brushes)[FilterBorderBrush], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}"
                                                       Margin="2,0,2,0"
                                                       VerticalAlignment="Stretch"
                                                       Visibility="{Binding IsHighlightVisible}"
                                                       RenderTransform="{Binding RenderTransform}"
                                                       RenderTransformOrigin="0,1" />
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <con:UniformStackPanel Orientation="Horizontal"
                                                               Margin="0,0,2,0" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>

                            <!-- Range Slider -->
                            <con:RangeSlider x:Name="rslider"
                                             Grid.Row="2"
                                             Grid.ColumnSpan="2"
                                             HorizontalAlignment="Stretch"
                                             LeftThumbValue="{Binding SelectedLowerBound, Mode=TwoWay}"
                                             RightThumbValue="{Binding SelectedUpperBound, Mode=TwoWay}"
                                             Maximum="{Binding RangeMax}"
                                             Minimum="{Binding RangeMin}"
                                             SmallChange="{Binding SmallChange}"
                                             IsEnabled="{Binding IsRangeSliderEnabled}"
                                             Command="{Binding UpdateRangeBoundsCommand}"
                                             IsTabStop="False"
                                             Background="{Binding ControlBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}"
                                             Foreground="{Binding BorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}"
                                             BorderBrush="{Binding (con:FrameworkElementExtensions.Brushes)[FilterBorderBrush], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}"
                                             NormalBackground="{Binding (con:FrameworkElementExtensions.Brushes)[FilterBorderBrush], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}"
                                             HoverBackground="{Binding (con:FrameworkElementExtensions.Brushes)[ControlHoverBackground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}"
                                             RangeSliderBorderBrush="{Binding (con:FrameworkElementExtensions.Brushes)[FilterBorderBrush], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />

                            <!-- Labels for the slider's max and min -->
                            <con:FadingTextBlock x:Name="m_minText"
                                                 Grid.Column="0"
                                                 Grid.Row="3"
                                                 HorizontalAlignment="Left"
                                                 Style="{StaticResource RangeScopeTextBlock}"
                                                 Text="{Binding DisplayRangeMin}" />
                            <con:FadingTextBlock x:Name="m_maxText"
                                                 Grid.Column="1"
                                                 Grid.Row="3"
                                                 HorizontalAlignment="Right"
                                                 Style="{StaticResource RangeScopeTextBlock}"
                                                 Text="{Binding DisplayRangeMax}" />
                        </Grid>
                    </Grid>
                </DataTemplate>

                <!-- DataTemplate for FacetCategory that contains datetime facets -->
                <DataTemplate x:Key="DateTimeFacetCategoryViewModelTemplate">
                    <Grid x:Name="LayoutRoot"
                          Background="Transparent"
                          views:ViewBehaviors.Model="{Binding Model}"
                          views:ViewBehaviors.ViewModel="{Binding}">

                        <!-- Visualize list of Facets. Use a VirtualizingStackPanel for efficiency. -->
                        <ItemsControl x:Name="m_facetItemsControl"
                                      DataContext="{Binding}"
                                      Height="{Binding ElementName=root, Path=CategorySize}"
                                      Style="{StaticResource StringFacetsItemsControlStyle}"
                                      ItemsSource="{Binding FacetsAndDividers}"
                                      VirtualizingStackPanel.VirtualizationMode="Standard">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Border Background="Transparent">
                                        <!-- Select the appropriate DataTemplate to use -->
                                        <con:DataTemplateSelectorControl Content="{Binding}"
                                                                         HorizontalContentAlignment="Stretch"
                                                                         IsTabStop="False">
                                            <con:DataTemplateSelectorControl.Resources>
                                                <!-- The default data template -->
                                                <DataTemplate x:Key="DefaultDataTemplate">
                                                    <ContentPresenter Content="{Binding}" />
                                                </DataTemplate>

                                                <!-- DataTemplate for a normal facet -->
                                                <DataTemplate x:Key="FacetTemplate">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto" />
                                                            <ColumnDefinition Width="*" />
                                                        </Grid.ColumnDefinitions>

                                                        <con:ManualToggleButton IsChecked="{Binding Applied}"
                                                                                Style="{StaticResource ToggleFacetCheckbox}"
                                                                                Margin="1,0,0,0">
                                                            <int:Interaction.Behaviors>
                                                                <int:MouseLeftClickBehavior Command="{Binding ElementName=m_facetItemsControl,Path=DataContext.ToggleFacetCommand}"
                                                                                            CommandParameter="{Binding}" />
                                                            </int:Interaction.Behaviors>
                                                        </con:ManualToggleButton>

                                                        <Button x:Name="PART_FacetSelectorButton"
                                                                HorizontalContentAlignment="Left"
                                                                Grid.Column="1"
                                                                Style="{StaticResource SplitCheckboxContentButtonStyle}">
                                                            <int:Interaction.Behaviors>
                                                                <int:MouseLeftClickBehavior Command="{Binding ElementName=m_facetItemsControl,Path=DataContext.ApplyFacetCommand}"
                                                                                            CommandParameter="{Binding}" />
                                                            </int:Interaction.Behaviors>
                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="*" />
                                                                    <ColumnDefinition Width="Auto" />
                                                                </Grid.ColumnDefinitions>
                                                                <con:FadingTextBlock x:Name="PART_FacetName"
                                                                                     Text="{Binding Name}"
                                                                                     Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}"
                                                                                     BlockBorder="{Binding BorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}"
                                                                                     BlockBackground="{Binding Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}"
                                                                                     BlockForeground="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}"
                                                                                     Margin="0,0,8,0"
                                                                                     HorizontalAlignment="Left" />
                                                                <TextBlock x:Name="PART_CardinalityCount"
                                                                           Text="{Binding InScopeCount}"
                                                                           VerticalAlignment="Center"
                                                                           Grid.Column="1"
                                                                           HorizontalAlignment="Right"
                                                                           Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}"
                                                                           Opacity="0.5"
                                                                           Margin="0,0,5,0" />
                                                            </Grid>
                                                        </Button>
                                                    </Grid>
                                                </DataTemplate>

                                                <!-- Data template for a DateFacetCategorySeparator -->
                                                <DataTemplate x:Key="DateFacetCategorySeparatorTemplate">
                                                    <Rectangle Style="{StaticResource SeparatorStyle}"
                                                               Fill="{Binding BorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
                                                </DataTemplate>

                                                <!-- Data template for DateTimeCustomFacet -->
                                                <DataTemplate x:Key="DateTimeCustomFacetTemplate">
                                                    <StackPanel x:Name="PART_CustomDateFacetPanel">
                                                        <!-- Standard facet visual -->
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="Auto" />
                                                                <ColumnDefinition Width="*" />
                                                            </Grid.ColumnDefinitions>

                                                            <con:ManualToggleButton IsChecked="{Binding Applied}"
                                                                                    Style="{StaticResource ToggleFacetCheckbox}"
                                                                                    Margin="1,0,0,0"
                                                                                    HorizontalContentAlignment="Stretch">
                                                                <int:Interaction.Behaviors>
                                                                    <int:MouseLeftClickBehavior Command="{Binding ElementName=m_facetItemsControl,Path=DataContext.ToggleFacetCommand}"
                                                                                                CommandParameter="{Binding}" />
                                                                </int:Interaction.Behaviors>
                                                            </con:ManualToggleButton>

                                                            <Button HorizontalContentAlignment="Left"
                                                                    x:Name="PART_FacetSelectorButton"
                                                                    Grid.Column="1"
                                                                    Style="{StaticResource SplitCheckboxContentButtonStyle}">
                                                                <int:Interaction.Behaviors>
                                                                    <int:MouseLeftClickBehavior Command="{Binding ElementName=m_facetItemsControl,Path=DataContext.ApplyFacetCommand}"
                                                                                                CommandParameter="{Binding}" />
                                                                </int:Interaction.Behaviors>

                                                                <con:FadingTextBlock x:Name="PART_FacetName"
                                                                                     Text="{Binding Name}"
                                                                                     Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}"
                                                                                     BlockBorder="{Binding BorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}"
                                                                                     BlockBackground="{Binding Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}"
                                                                                     BlockForeground="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}"
                                                                                     Margin="0,0,5,0"
                                                                                     HorizontalAlignment="Left" />
                                                            </Button>
                                                        </Grid>
                                                        <!-- Beginning of range -->
                                                        <!-- We ancestor bind the FilterPaneView to the Tag property in order to allow our EventToCommandBehavior to find it
                                                             (objects inside a collection don't have access to the visual tree, so an ancestor binding directly on the behaviors
                                                             won't work -->
                                                        <con:LabeledAvailableRangeDatePicker x:Name="m_mindatepicker"
                                                                                             Margin="18,0,2,0"
                                                                                             MinWidth="220"
                                                                                             Label="{Binding ElementName=m_facetItemsControl,Path=DataContext.MinDatePickerPrefix}"
                                                                                             Style="{StaticResource AvailableRangeDatePickerStyle}"
                                                                                             AvailableDateStart="{Binding ElementName=m_facetItemsControl,Path=DataContext.RangeMin}"
                                                                                             AvailableDateEnd="{Binding ElementName=m_maxdatepicker, Path=SelectedDate}"
                                                                                             ForceSelectedDate="{Binding ElementName=m_facetItemsControl,Path=DataContext.SelectedLowerBound, Mode=TwoWay}"
                                                                                             SelectedDateChangedCommand="{Binding ElementName=m_facetItemsControl,Path=DataContext.UpdateRangeBoundsCommand}"
                                                                                             SelectedDateChangedCommandParameter="LowerBoundChanged"
                                                                                             Tag="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}">
                                                            <int:Interaction.Behaviors>
                                                                <int:EventToCommandBehavior EventName="CalendarOpened"
                                                                                            Command="{Binding Tag.OnCalendarOpenedCommand, ElementName=m_mindatepicker}" />
                                                                <int:EventToCommandBehavior EventName="CalendarClosed"
                                                                                            Command="{Binding Tag.OnCalendarClosedCommand, ElementName=m_mindatepicker}" />
                                                            </int:Interaction.Behaviors>
                                                        </con:LabeledAvailableRangeDatePicker>

                                                        <!-- We ancestor bind the FilterPaneView to the Tag property in order to allow our EventToCommandBehavior to find it
                                                             (objects inside a collection don't have access to the visual tree, so an ancestor binding directly on the behaviors
                                                             won't work -->
                                                        <con:LabeledAvailableRangeDatePicker x:Name="m_maxdatepicker"
                                                                                             Margin="18,0,2,0"
                                                                                             MinWidth="220"
                                                                                             Label="{Binding ElementName=m_facetItemsControl,Path=DataContext.MaxDatePickerPrefix}"
                                                                                             Style="{StaticResource AvailableRangeDatePickerStyle}"
                                                                                             AvailableDateStart="{Binding ElementName=m_mindatepicker, Path=SelectedDate}"
                                                                                             AvailableDateEnd="{Binding ElementName=m_facetItemsControl,Path=DataContext.RangeMax}"
                                                                                             ForceSelectedDate="{Binding ElementName=m_facetItemsControl,Path=DataContext.SelectedUpperBound, Mode=TwoWay}"
                                                                                             SelectedDateChangedCommand="{Binding ElementName=m_facetItemsControl,Path=DataContext.UpdateRangeBoundsCommand}"
                                                                                             SelectedDateChangedCommandParameter="UpperBoundChanged"
                                                                                             Tag="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}">
                                                            <int:Interaction.Behaviors>
                                                                <int:EventToCommandBehavior EventName="CalendarOpened"
                                                                                            Command="{Binding Tag.OnCalendarOpenedCommand, ElementName=m_maxdatepicker}" />
                                                                <int:EventToCommandBehavior EventName="CalendarClosed"
                                                                                            Command="{Binding Tag.OnCalendarClosedCommand, ElementName=m_maxdatepicker}" />
                                                            </int:Interaction.Behaviors>
                                                        </con:LabeledAvailableRangeDatePicker>
                                                    </StackPanel>
                                                </DataTemplate>

                                            </con:DataTemplateSelectorControl.Resources>
                                        </con:DataTemplateSelectorControl>
                                    </Border>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Grid>
                </DataTemplate>

                <!-- DataTemplate for FacetCategory that contains string facets -->
                <DataTemplate x:Key="StringFacetCategoryViewModelTemplate">
                    <Grid x:Name="LayoutRoot"
                          Background="Transparent"
                          views:ViewBehaviors.Model="{Binding Model}"
                          views:ViewBehaviors.ViewModel="{Binding}">

                        <con:EnforcingStackPanel Height="{Binding ElementName=root, Path=CategorySize}"
                                                 DataContext="{Binding}">

                            <con:CycleButton HorizontalAlignment="Left"
                                             Visibility="{Binding Visibility}"
                                             ItemsSource="{Binding Comparers}"
                                             SelectedItem="{Binding CurrentComparer, Mode=TwoWay}"
                                             Style="{StaticResource SortButton}"
                                             Margin="2,0,0,0"
                                             AutomationProperties.Name="{Binding AutomationNameCategorySort}"
                                             Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
                            <!-- Visualize list of Facets. Use a VirtualizingStackPanel for efficiency. -->
                            <ItemsControl x:Name="m_facetItemsControl"
                                          Style="{StaticResource StringFacetsItemsControlStyle}"
                                          ItemsSource="{Binding Facets}"
                                          VirtualizingStackPanel.VirtualizationMode="Standard">
                                <ItemsControl.ItemTemplate>
                                    <!--DataTemplate for a normal facet-->
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>

                                            <con:ManualToggleButton IsChecked="{Binding Applied}"
                                                                    Style="{StaticResource ToggleFacetCheckbox}"
                                                                    Margin="1,0,0,0">
                                                <int:Interaction.Behaviors>
                                                    <int:MouseLeftClickBehavior Command="{Binding ElementName=m_facetItemsControl,Path=DataContext.ToggleFacetCommand}"
                                                                                CommandParameter="{Binding}" />
                                                </int:Interaction.Behaviors>
                                            </con:ManualToggleButton>

                                            <Button x:Name="PART_FacetSelectorButton"
                                                    HorizontalContentAlignment="Left"
                                                    Grid.Column="1"
                                                    Style="{StaticResource SplitCheckboxContentButtonStyle}">
                                                <int:Interaction.Behaviors>
                                                    <int:MouseLeftClickBehavior Command="{Binding ElementName=m_facetItemsControl,Path=DataContext.ApplyFacetCommand}"
                                                                                CommandParameter="{Binding}" />
                                                </int:Interaction.Behaviors>
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*" />
                                                        <ColumnDefinition Width="Auto" />
                                                    </Grid.ColumnDefinitions>
                                                    <con:FadingTextBlock x:Name="PART_FacetName"
                                                                         Text="{Binding Name}"
                                                                         Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}"
                                                                         BlockBorder="{Binding BorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}"
                                                                         BlockBackground="{Binding Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}"
                                                                         BlockForeground="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}"
                                                                         Margin="0,0,8,0"
                                                                         HorizontalAlignment="Left" />
                                                    <TextBlock x:Name="PART_CardinalityCount"
                                                               Text="{Binding InScopeCount}"
                                                               VerticalAlignment="Center"
                                                               Grid.Column="1"
                                                               HorizontalAlignment="Right"
                                                               Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}"
                                                               Opacity="0.5"
                                                               Margin="0,0,5,0" />
                                                </Grid>
                                            </Button>
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </con:EnforcingStackPanel>
                    </Grid>
                </DataTemplate>

            </con:DataTemplateSelectorControl.Resources>
        </con:DataTemplateSelectorControl>
    </DataTemplate>
    <!-- End  Auxiliary FilterPane styles -->

    <!-- Begin default CustomSearchBox style -->

    <Style TargetType="con:CustomSearchBox">
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="NormalBorderBrush"
                Value="{Binding BorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
        <Setter Property="FocusBorderBrush"
                Value="{Binding (con:FrameworkElementExtensions.Brushes)[FocusBorderBrush], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
        <Setter Property="AppliedBorderBrush"
                Value="{Binding (con:FrameworkElementExtensions.Brushes)[FilterBorderBrush], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
        <Setter Property="HoverBorderBrush"
                Value="{Binding (con:FrameworkElementExtensions.Brushes)[FilterBorderBrush], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />

        <Setter Property="NormalBackgroundBrush"
                Value="{Binding SecondaryBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
        <Setter Property="FocusBackgroundBrush"
                Value="{Binding SecondaryBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
        <Setter Property="AppliedBackgroundBrush"
                Value="{Binding (con:FrameworkElementExtensions.Brushes)[SecondaryControlHoverBackground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />

        <Setter Property="SearchTextBrush"
                Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
        <Setter Property="SelectionForegroundBrush"
                Value="{Binding SecondaryBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
        <Setter Property="SelectionBackgroundBrush"
                Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />

        <Setter Property="HintTextBrush"
                Value="{Binding SecondaryForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />

        <Setter Property="ApplyButtonBrush"
                Value="{Binding (con:FrameworkElementExtensions.Brushes)[ControlForeground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
        <Setter Property="ApplyButtonHoverStyle"
                Value="{StaticResource Style_Apply_Button_Hover}" />

        <Setter Property="SuggestionBoxBorderBrush"
                Value="{Binding (con:FrameworkElementExtensions.Brushes)[FilterBorderBrush], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
        <Setter Property="SuggestionBoxForegroundBrush"
                Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
        <Setter Property="SuggestionBoxBackgroundBrush"
                Value="{Binding SecondaryBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
        <Setter Property="ClearButtonStyle"
                Value="{StaticResource ClearAllButton}" />
        <Setter Property="SuggestionBoxBorderEffect"
                Value="{StaticResource PopupDropShadowEffect}" />
        <Setter Property="SuggestionBoxItemStyle"
                Value="{StaticResource Style_SuggestionListBoxItem}" />

        <Setter Property="con:FrameworkElementExtensions.BackgroundProxy"
                Value="{Binding SecondaryBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
        <Setter Property="con:FrameworkElementExtensions.ForegroundProxy"
                Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
        <Setter Property="con:FrameworkElementExtensions.BorderBrushProxy"
                Value="{Binding BorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
        <Setter Property="con:FrameworkElementExtensions.SecondaryBackgroundProxy"
                Value="{Binding Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
        <Setter Property="con:FrameworkElementExtensions.SecondaryForegroundProxy"
                Value="{Binding SecondaryForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
        <Setter Property="AccentColor"
                Value="{Binding AccentColor, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="con:CustomSearchBox">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="searchBox_focus"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="searchBox_normal"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="searchBox_hover"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="searchBox_normal"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CustomFilterStates">
                                <VisualState x:Name="AppliedSearch">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="searchBox_normal"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="PART_ApplyButton"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="searchBox_applied"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="PART_ClearButton"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="NewSearch">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="searchBox_normal"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="searchBox_applied"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="PART_ApplyButton"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="PART_ClearButton"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="HintStates">
                                <VisualState x:Name="HideHint">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="m_hintTextBlock"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ShowHint">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="m_hintTextBlock"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="20" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="searchBox_normal"
                                BorderThickness="1"
                                Grid.ColumnSpan="2"
                                Margin="0"
                                Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=NormalBackgroundBrush}"
                                BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=NormalBorderBrush}" />
                        <Border x:Name="searchBox_focus"
                                BorderThickness="1"
                                Grid.ColumnSpan="2"
                                Margin="0"
                                Visibility="Collapsed"
                                Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusBackgroundBrush}"
                                BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusBorderBrush}" />
                        <Border x:Name="searchBox_applied"
                                BorderThickness="1"
                                Grid.ColumnSpan="2"
                                Margin="0"
                                Visibility="Collapsed"
                                Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AppliedBackgroundBrush}"
                                BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AppliedBorderBrush}" />
                        <Border x:Name="searchBox_hover"
                                BorderThickness="1"
                                Grid.ColumnSpan="2"
                                Margin="0"
                                Visibility="Collapsed"
                                Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HoverBackgroundBrush}"
                                BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HoverBorderBrush}" />
                        <TextBox x:Name="PART_TextBox"
                                 Grid.Column="0"
                                 Grid.Row="0"
                                 Background="{x:Null}"
                                 BorderBrush="{x:Null}"
                                 FontSize="12"
                                 Margin="2,0,0,0"
                                 VerticalContentAlignment="Stretch"
                                 HorizontalContentAlignment="Stretch"
                                 VerticalAlignment="Center"
                                 Text="{Binding CurrentSearchTerm}"
                                 Padding="3,0,0,0"
                                 Style="{StaticResource Style_SearchTextBox}"
                                 Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SearchTextBrush}"
                                 SelectionBackground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectionBackgroundBrush}"
                                 SelectionForeground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectionForegroundBrush}"
                                 int:KeyGestureCommandBehavior.IgnoreGestures="true" />
                        <TextBlock x:Name="m_hintTextBlock"
                                   Grid.Column="0"
                                   Grid.Row="0"
                                   IsHitTestVisible="false"
                                   Text="{Binding CustomSearchPromptText, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}"
                                   FontStyle="Italic"
                                   FontSize="12"
                                   VerticalAlignment="Center"
                                   Visibility="Collapsed"
                                   Margin="2,1,2,0"
                                   Padding="3,0,0,0"
                                   Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HintTextBrush}" />
                        <Button Grid.Row="0"
                                x:Name="PART_ApplyButton"
                                Grid.Column="1"
                                Background="{x:Null}"
                                BorderBrush="{x:Null}"
                                Margin="0,0,1,0"
                                Style="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ApplyButtonHoverStyle}">
                            <int:Interaction.Behaviors>
                                <int:MouseLeftClickBehavior Command="{Binding SearchCommand}" />
                            </int:Interaction.Behaviors>
                            <Path Data="F1 M 390.821,272.534C 387.796,272.534 385.342,270.08 385.342,267.051C 385.342,264.025 387.796,261.572 390.821,261.572C 393.85,261.572 396.3,264.025 396.3,267.051C 396.3,270.08 393.85,272.534 390.821,272.534M 390.821,258.081C 385.868,258.081 381.85,262.096 381.85,267.051C 381.85,268.854 382.389,270.523 383.298,271.926L 377.072,278.156C 376.21,279.017 376.21,280.411 377.072,281.275C 377.503,281.707 378.067,281.922 378.631,281.922C 379.195,281.922 379.759,281.707 380.19,281.275L 386.534,274.931C 387.811,275.628 389.269,276.025 390.821,276.025C 395.774,276.025 399.792,272.007 399.792,267.051C 399.792,262.096 395.774,258.081 390.821,258.081"
                                  Stretch="Fill"
                                  Width="11"
                                  Height="11"
                                  Fill="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ApplyButtonBrush}" />
                        </Button>
                        <Button Grid.Row="0"
                                x:Name="PART_ClearButton"
                                Grid.Column="1"
                                Style="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ClearButtonStyle}"
                                HorizontalAlignment="Left"
                                Width="20"
                                Margin="0,1,1,1">
                            <int:Interaction.Behaviors>
                                <int:MouseLeftClickBehavior Command="{Binding ClearCategoryCommand}" />
                            </int:Interaction.Behaviors>
                        </Button>
                        <Popup x:Name="PART_SuggestionListBoxPopup"
                               IsOpen="{Binding IsWordWheelerVisible, Mode=OneWay}"
                               VerticalOffset="24"
                               HorizontalOffset="{Binding ElementName=PART_TextBox, Path=Canvas.Left}">
                            <Grid>
                                <!-- This extra border exists to correct for a Silverlight bug with DropShadowEffect. See FB 1877 -->
                                <!-- When/if the Silverlight bug is fixed, delete this border, move its attributes to m_suggestionListContainer,
                                     and remove the Grid wrapping these two borders. -->
                                <Border BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SuggestionBoxBorderBrush}"
                                        BorderThickness="1"
                                        CornerRadius="0"
                                        Effect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SuggestionBoxBorderEffect}"
                                        IsHitTestVisible="False" />
                                <Border x:Name="m_suggestionListContainer"
                                        BorderThickness="1"
                                        Background="Transparent">
                                    <con:SuggestionListBox x:Name="PART_SuggestionListBox"
                                                           ItemsSource="{Binding Suggestions}"
                                                           SelectedIndex="{Binding SelectedSuggestionIndex, Mode=TwoWay}"
                                                           BorderThickness="0"
                                                           Padding="0"
                                                           ItemContainerStyle="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SuggestionBoxItemStyle}"
                                                           Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SuggestionBoxForegroundBrush}"
                                                           Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SuggestionBoxBackgroundBrush}"
                                                           ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                                        <con:SuggestionListBox.ItemTemplate>
                                            <DataTemplate>
                                                <con:FadingTextBlock Text="{Binding}"
                                                                     Style="{StaticResource SearchSuggestionTextBlockStyle}" />
                                            </DataTemplate>
                                        </con:SuggestionListBox.ItemTemplate>
                                    </con:SuggestionListBox>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- End default CustomSearchBox style -->

    <!-- Begin accordion item styles -->

    <!-- Style for an AccordionButton -->
    <ControlTemplate TargetType="con:CascadingAccordionButton"
                     x:Key="AccordionButtonTemplate">
        <Border Background="Transparent">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Duration="00:00:00.0010000"
                                                           Storyboard.TargetName="MouseOverVisual"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                      Value="0.2" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Duration="00:00:00.0010000"
                                                           Storyboard.TargetName="MouseOverVisual"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                      Value="0.2" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                           Storyboard.TargetName="FocusBorder">
                                <DiscreteObjectKeyFrame KeyTime="0"
                                                        Value="Visible" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unfocused" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
                <Rectangle x:Name="MouseOverVisual"
                           Fill="{Binding (con:FrameworkElementExtensions.Brushes)[ControlHoverBackground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}"
                           Opacity="0" />
                <ContentControl x:Name="header"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Foreground="{TemplateBinding Foreground}"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                FontStretch="{TemplateBinding FontStretch}"
                                FontStyle="{TemplateBinding FontStyle}"
                                FontWeight="{TemplateBinding FontWeight}"
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                IsTabStop="False" />
                <Border x:Name="FocusBorder"
                        Margin="0,-2,0,0"
                        Visibility="Collapsed"
                        BorderThickness="{StaticResource FocusedBorderThickness}"
                        BorderBrush="{Binding (con:FrameworkElementExtensions.Brushes)[FocusBorderBrush], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
            </Grid>
        </Border>
    </ControlTemplate>

    <!-- AccordionItemStyle -->
    <Style x:Key="AccordionItemStyle"
           TargetType="con:AccordionItem">
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment"
                Value="Stretch" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="con:AccordionItem">
                    <Grid Margin="1,0,1,0"
                          Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <!-- CommonState -->
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="DisabledVisualElement"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver" />
                            </VisualStateGroup>
                            <!-- FocusStates -->
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="FocusVisualElement"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <!-- Unfocused -->
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <!-- ExpansionStates -->
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Collapsed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetName="ExpandSite"
                                                                       Storyboard.TargetProperty="(ExpandableContentControl.Percentage)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.3"
                                                                  KeySpline="0.2,0,0,1"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00.3"
                                                                       Duration="00:00:00"
                                                                       Storyboard.TargetName="ExpandSite"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetName="ExpandSite"
                                                                       Storyboard.TargetProperty="(ExpandableContentControl.Percentage)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.3"
                                                                  KeySpline="0.2,0,0,1"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="m_Background"
                                Padding="{TemplateBinding Padding}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid Margin="-1,0,-1,-1"
                                  x:Name="PART_FacetCategory">
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="rd0"
                                                   Height="Auto" />
                                    <RowDefinition x:Name="rd1"
                                                   Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="cd0"
                                                      Width="*" />
                                </Grid.ColumnDefinitions>
                                <con:CascadingAccordionButton x:Name="ExpanderButton"
                                                              Template="{StaticResource AccordionButtonTemplate}"
                                                              DataContext="{Binding}"
                                                              Content="{TemplateBinding Header}"
                                                              ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                              IsChecked="{TemplateBinding IsSelected}"
                                                              Grid.Column="0"
                                                              Grid.Row="0"
                                                              Padding="0"
                                                              FontFamily="{TemplateBinding FontFamily}"
                                                              FontSize="{TemplateBinding FontSize}"
                                                              FontStretch="{TemplateBinding FontStretch}"
                                                              FontStyle="{TemplateBinding FontStyle}"
                                                              FontWeight="{TemplateBinding FontWeight}"
                                                              Foreground="{TemplateBinding Foreground}"
                                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <!-- Triggering off ExpandSite.Percentage isn't ideal, because it will change many times over the
                                    course of a expand/collapse, but it's the only way available to ensure that the behavior is triggered
                                    soon after the button has moved out from underneath the mouse (although the VSM would seem to indicate
                                    that Visibility would work, it appears to change too early and so the behavior is triggered prematurely) -->
                                    <int:Interaction.Behaviors>
                                        <int:SynchronizeMouseBehavior Trigger="{Binding ElementName=ExpandSite,Path=Percentage}" />
                                    </int:Interaction.Behaviors>
                                </con:CascadingAccordionButton>
                                <con:ExpandableContentControlWithTargetHeight x:Name="ExpandSite"
                                                                              Grid.Column="0"
                                                                              Grid.Row="2"
                                                                              Percentage="0"
                                                                              Content="{TemplateBinding Content}"
                                                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                              RevealMode="{TemplateBinding ExpandDirection}"
                                                                              Padding="0"
                                                                              FontFamily="{TemplateBinding FontFamily}"
                                                                              FontSize="{TemplateBinding FontSize}"
                                                                              FontStretch="{TemplateBinding FontStretch}"
                                                                              FontStyle="{TemplateBinding FontStyle}"
                                                                              FontWeight="{TemplateBinding FontWeight}"
                                                                              Foreground="{TemplateBinding Foreground}"
                                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                              TargetHeight="{Binding CategorySize, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
                            </Grid>
                        </Border>
                        <Border x:Name="DisabledVisualElement"
                                IsHitTestVisible="false"
                                Opacity="0" />
                        <Border x:Name="FocusVisualElement"
                                IsHitTestVisible="false"
                                Visibility="Collapsed" />
                        <Border UseLayoutRounding="True"
                                BorderThickness="0,1,0,0"
                                BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerFilterPane}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End accordion item styles -->

    <!-- Begin custom accordion default style -->
    <Style TargetType="con:CustomAccordion">
        <Setter Property="ItemContainerStyle"
                Value="{StaticResource AccordionItemStyle}" />
        <Setter Property="ItemTemplate"
                Value="{StaticResource FacetCategoryHeaderTemplate}" />
        <Setter Property="ContentTemplate"
                Value="{StaticResource FacetCategoryTemplate}" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="SelectionMode"
                Value="ZeroOrOne" />
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="Foreground"
                Value="{x:Null}" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Top" />
        <Setter Property="Cursor"
                Value="Arrow" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="IsTabStop"
                Value="False" />
        <!-- Accordion expects a stackpanel to layout its children. -->
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel VerticalAlignment="Top" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="con:CustomAccordion">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <!-- common states -->
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <!-- focus states -->
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <ItemsPresenter />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- End custom accordion default style -->

    <!-- Begin FilterPane Default Style -->

    <Style x:Key="PivotViewerFilterPaneStyle" TargetType="sdk:PivotViewerFilterPane">
        <Setter Property="VerticalContentAlignment"
                Value="Stretch" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="Foreground"
                Value="Black" />
        <Setter Property="Background"
                Value="White" />
        <Setter Property="BorderBrush"
                Value="DarkOliveGreen" />
        <Setter Property="AccentColor"
                Value="#54b0df" />
        <Setter Property="SecondaryBackground"
                Value="GhostWhite" />
        <Setter Property="ControlBackground"
                Value="LightGray" />
        <Setter Property="ClearButtonBackground"
                Value="{StaticResource ClearButtonCircleBackground}" />
        <Setter Property="SecondaryForeground"
                Value="DarkGray" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="sdk:PivotViewerFilterPane">
                    <Grid x:Name="FilterPaneRoot"
                          Background="Transparent"
                          Width="185"
                          Margin="5,5,0,5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <!-- This shouldn't have to be a separate element, but there seems to be a bug with DropShadowEffect -->
                        <!--<Rectangle Fill="{TemplateBinding SecondaryBackground}"
                                   Grid.RowSpan="3"
                                   RadiusX="3"
                                   RadiusY="2"
                                   Effect="{StaticResource DropShadowEffect}"
                                   IsHitTestVisible="False" />-->
                        <Rectangle x:Name="m_Background"
                                   Fill="{TemplateBinding SecondaryBackground}"
                                   Stroke="{TemplateBinding BorderBrush}"
                                   Grid.RowSpan="3"
                                   RadiusX="3"
                                   RadiusY="2" />
                        <Button x:Name="PART_ClearAllButton"
                                AutomationProperties.Name="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ClearAllButtonText}"
                                Grid.Row="0"
                                Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ClearAllButtonText}"
                                Foreground="{TemplateBinding Foreground}"
                                Style="{StaticResource ClearAllButton}"
                                HorizontalContentAlignment="Center"
                                HorizontalAlignment="Right"
                                Margin="2,4,4,4" />
                        <ContentControl HorizontalContentAlignment="Stretch"
                                        Grid.Row="1"
                                        x:Name="PART_CustomSearchBoxContainer"
                                        Margin="4,0,4,3"
                                        IsTabStop="False">
                        </ContentControl>

                        <ScrollViewer x:Name="PART_CategoriesContainer"
                                      Style="{StaticResource FilterScrollViewerStyle}"
                                      VerticalScrollBarVisibility="Auto"
                                      HorizontalScrollBarVisibility="Disabled"
                                      Grid.Row="2"
                                      BorderBrush="{x:Null}"
                                      Padding="1"
                                      IsTabStop="False">
                            <int:Interaction.Behaviors>
                                <int:HandleMouseWheel />
                            </int:Interaction.Behaviors>
                        </ScrollViewer>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- End FilterPaneView Default Style -->

    <Style x:Key="PivotViewerDetailPaneStyle" TargetType="sdk:PivotViewerDetailPane">
        <Setter Property="Foreground"
                Value="Black" />
        <Setter Property="Background"
                Value="GhostWhite" />
        <Setter Property="BorderBrush"
                Value="DarkOliveGreen" />
        <Setter Property="AccentColor"
                Value="#54b0df" />
        <Setter Property="ControlBackground"
                Value="LightGray" />
        <Setter Property="SecondaryForeground"
                Value="DarkGray" />
        <Setter Property="PrimaryItemValueBackgroundColor"
                Value="DimGray" />
        <Setter Property="SecondaryItemValueBackgroundColor"
                Value="Gray" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="sdk:PivotViewerDetailPane">
                    <Grid x:Name="IPVRootGrid">
                        <Grid.Resources>
                            <Style x:Key="Style_Button_noBackground"
                                   TargetType="Button">
                                <Setter Property="Background"
                                        Value="{x:Null}" />
                                <Setter Property="Foreground"
                                        Value="{Binding ForegroundBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerDetailPane}}" />
                                <Setter Property="BorderBrush"
                                        Value="{x:Null}" />
                                <Setter Property="BorderThickness"
                                        Value="1" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                                               Storyboard.TargetName="contentPresenter">
                                                                    <EasingDoubleKeyFrame KeyTime="0"
                                                                                          Value="0.65" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                               Duration="00:00:00.0010000"
                                                                                               Storyboard.TargetName="BG_hover"
                                                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                    <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                                          Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                               Duration="00:00:00.0010000"
                                                                                               Storyboard.TargetName="BG_normal"
                                                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                    <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                                          Value="0" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                                               Storyboard.TargetName="contentPresenter">
                                                                    <EasingDoubleKeyFrame KeyTime="0"
                                                                                          Value="0.8" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Pressed">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                               Duration="00:00:00.0010000"
                                                                                               Storyboard.TargetName="BG_normal"
                                                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                    <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                                          Value="0" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                               Duration="00:00:00.0010000"
                                                                                               Storyboard.TargetName="BG_hover"
                                                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                    <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                                          Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                                               Storyboard.TargetName="contentPresenter">
                                                                    <EasingDoubleKeyFrame KeyTime="0"
                                                                                          Value="0.8" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                               Duration="00:00:00.0010000"
                                                                                               Storyboard.TargetName="contentPresenter"
                                                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                    <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                                          Value="0.2" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="FocusStates">
                                                        <VisualState x:Name="Focused">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                                               Storyboard.TargetName="FocusBorder">
                                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                                            Value="Visible" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Unfocused" />
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Rectangle x:Name="BG_normal"
                                                           Margin="0"
                                                           Fill="{TemplateBinding Background}"
                                                           Stroke="{TemplateBinding BorderBrush}" />
                                                <Rectangle x:Name="BG_hover"
                                                           Margin="0"
                                                           Fill="{Binding (con:FrameworkElementExtensions.Brushes)[ControlHoverBackground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerDetailPane}}"
                                                           Opacity="0" />
                                                <ContentPresenter x:Name="contentPresenter"
                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                  Margin="{TemplateBinding Padding}"
                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                  Content="{TemplateBinding Content}"
                                                                  ContentTemplate="{TemplateBinding ContentTemplate}" />
                                                <Border x:Name="FocusBorder"
                                                        Visibility="Collapsed"
                                                        BorderThickness="{StaticResource FocusedBorderThickness}"
                                                        BorderBrush="{Binding (con:FrameworkElementExtensions.Brushes)[FocusBorderBrush], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerDetailPane}}" />
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <ControlTemplate x:Key="Template_InfoPaneShowButton"
                                             TargetType="Button">
                                <Grid>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                                   Storyboard.TargetName="hover">
                                                        <EasingDoubleKeyFrame KeyTime="0"
                                                                              Value="1" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled" />
                                            <VisualState x:Name="Normal" />
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                                   Storyboard.TargetName="hover">
                                                        <EasingDoubleKeyFrame KeyTime="0"
                                                                              Value="1" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="FocusStates">
                                            <VisualState x:Name="Focused">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                                   Storyboard.TargetName="FocusBorder">
                                                        <DiscreteObjectKeyFrame KeyTime="0"
                                                                                Value="Visible" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Unfocused" />
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Path x:Name="normal"
                                          Effect="{StaticResource DropShadowEffect}"
                                          IsHitTestVisible="False"
                                          Stretch="Fill"
                                          Fill="{TemplateBinding Background}"
                                          Data="M 382.204,272.861L 407.129,272.861C 408.017,272.861 408.737,273.58 408.737,274.469L 408.737,292.158C 408.737,293.046 408.017,293.766 407.129,293.766C 407.129,293.766 402.322,293.766 396.457,293.766C 394.724,293.766 388.763,300.473 387.11,300.473C 385.785,300.473 387.525,293.766 386.409,293.766C 383.651,293.766 382.204,293.766 382.204,293.766C 381.316,293.766 380.596,293.046 380.596,292.158L 380.596,274.469C 380.596,273.58 381.316,272.861 382.204,272.861 Z "
                                          HorizontalAlignment="Center"
                                          UseLayoutRounding="False"
                                          VerticalAlignment="Center"
                                          Stroke="{TemplateBinding BorderBrush}" />
                                    <Path x:Name="hover"
                                          Effect="{StaticResource DropShadowEffect}"
                                          IsHitTestVisible="False"
                                          Stretch="Fill"
                                          Fill="{Binding (con:FrameworkElementExtensions.Brushes)[ControlHoverBackground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerDetailPane}}"
                                          Data="M 382.204,272.861L 407.129,272.861C 408.017,272.861 408.737,273.58 408.737,274.469L 408.737,292.158C 408.737,293.046 408.017,293.766 407.129,293.766C 407.129,293.766 402.322,293.766 396.457,293.766C 394.724,293.766 388.763,300.473 387.11,300.473C 385.785,300.473 387.525,293.766 386.409,293.766C 383.651,293.766 382.204,293.766 382.204,293.766C 381.316,293.766 380.596,293.046 380.596,292.158L 380.596,274.469C 380.596,273.58 381.316,272.861 382.204,272.861 Z "
                                          HorizontalAlignment="Center"
                                          UseLayoutRounding="False"
                                          VerticalAlignment="Center"
                                          Opacity="0"
                                          Stroke="{Binding BorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerDetailPane}}" />
                                    <!-- This rectangle is here to provide something for the user to click on, since the two above paths are not hit test visible
                     due to a bug in DropShadowEffect (FB 1877) -->
                                    <Rectangle Fill="Transparent" />
                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" />
                                    <Border x:Name="FocusBorder"
                                            Visibility="Collapsed"
                                            BorderThickness="{StaticResource FocusedBorderThickness}"
                                            BorderBrush="{Binding (con:FrameworkElementExtensions.Brushes)[FocusBorderBrush], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerDetailPane}}" />
                                </Grid>
                            </ControlTemplate>
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FrozenStates">
                                <VisualState x:Name="NotFrozen" />
                                <VisualState x:Name="Frozen">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentRoot"
                                                                       Storyboard.TargetProperty="(con:CachedContentControl.IsCaching)"
                                                                       Duration="0:0:0.1">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.0"
                                                                    Value="true" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="TransitioningStates">
                                <VisualState x:Name="NotTransitioning" />
                                <VisualState x:Name="FastTransitioning">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FadeOutFill"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                                       Duration="0:0:0.8">
                                            <DiscreteDoubleKeyFrame Value="1"
                                                                    KeyTime="0:0:0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Transitioning">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentRoot"
                                                                       Storyboard.TargetProperty="(con:CachedContentControl.IsCaching)"
                                                                       Duration="0:0:0.8">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.3"
                                                                    Value="false" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FadeOutFill"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                                       Duration="0:0:0.8">
                                            <SplineDoubleKeyFrame KeySpline="0.0,0.03 0.32,1.0"
                                                                  Value="1"
                                                                  KeyTime="0:0:0.3" />
                                            <DiscreteDoubleKeyFrame Value="1"
                                                                    KeyTime="0:0:0.4" />
                                            <SplineDoubleKeyFrame KeySpline="0.0,0.03 0.32,1.0"
                                                                  Value="0"
                                                                  KeyTime="0:0:0.8" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ShowingStates">
                                <VisualState x:Name="Showing">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="IPVRootGrid"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                                       Duration="0:0:0.8">
                                            <SplineDoubleKeyFrame KeySpline="0.0,0.03 0.32,1.0"
                                                                  Value="1"
                                                                  KeyTime="0:0:0.8" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentRoot"
                                                                       Storyboard.TargetProperty="(con:CachedContentControl.IsCaching)"
                                                                       Duration="0:0:0.1">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                    Value="false" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <!--Make InfoPane hit-test visible after it fades in, not immediately because then it would block clicks that feel like they should work.
                                 In particular, we have to wait at least as long as the double-click timer here, to allow for double-click of an item that begins to
                                 get obscured by the infopane fading in over it because the first click focuses the item.-->
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IPVRootGrid"
                                                                       Storyboard.TargetProperty="(FrameworkElement.IsHitTestVisible)"
                                                                       Duration="0:0:0.8">
                                            <DiscreteObjectKeyFrame Value="true"
                                                                    KeyTime="0:0:0.5" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IPVRootGrid"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Tag)"
                                                                       Duration="0:0:0.8">
                                            <DiscreteObjectKeyFrame Value="Show"
                                                                    KeyTime="0:0:0.6" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="NotShowing">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="IPVRootGrid"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                                       Duration="0:0:0.8">
                                            <SplineDoubleKeyFrame KeySpline="0.0,0.03 0.32,1.0"
                                                                  Value="0"
                                                                  KeyTime="0:0:0.8" />
                                        </DoubleAnimationUsingKeyFrames>

                                        <!--Make InfoPane hit-test invisible after a tiny time delay when it starts to fade away 
                            This is important because when iterating we don't want the mouseover to go back onto the SIVP,
                            0.0001 is a small enough time to allow InfoPane to realize that the mouse is still over itself without
                            losing the double click capabilities.
                            If this value is to be tweeked, please verify that the change does not regress FogBugz 1099-->

                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IPVRootGrid"
                                                                       Storyboard.TargetProperty="(FrameworkElement.IsHitTestVisible)"
                                                                       Duration="0:0:0.8">
                                            <DiscreteObjectKeyFrame Value="false"
                                                                    KeyTime="0:0:0.0001" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IPVRootGrid"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Visibility)"
                                                                       Duration="0:0:0.8">
                                            <DiscreteObjectKeyFrame Value="Collapsed"
                                                                    KeyTime="0:0:0.8" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <!--Trigger SynchronizeMouseBehavior.  Wait until the double click trap is closed, otherwise 
                                the mouse enter may not register.-->
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IPVRootGrid"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Tag)"
                                                                       Duration="0:0:0.8">
                                            <DiscreteObjectKeyFrame Value="Hide"
                                                                    KeyTime="0:0:0.6" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                                       Storyboard.TargetName="PART_ShowButton"
                                                                       Duration="0:0:0.3">
                                            <SplineDoubleKeyFrame KeySpline="0.0,0.03 0.32,1.0"
                                                                  Value="0"
                                                                  KeyTime="0:0:0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                                       Storyboard.TargetName="MainPanel"
                                                                       Duration="0:0:0.3">
                                            <SplineDoubleKeyFrame KeySpline="0.0,0.03 0.32,1.0"
                                                                  Value="1"
                                                                  KeyTime="0:0:0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ShowButton"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Visibility)"
                                                                       Duration="0:0:0.3">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.3"
                                                                    Value="Collapsed" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MainPanel"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Visibility)"
                                                                       Duration="0:0:0.3">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                    Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Minimized">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                                       Storyboard.TargetName="PART_ShowButton"
                                                                       Duration="0:0:0.3">
                                            <SplineDoubleKeyFrame KeySpline="0.0,0.03 0.32,1.0"
                                                                  Value="1"
                                                                  KeyTime="0:0:0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                                       Storyboard.TargetName="MainPanel"
                                                                       Duration="0:0:0.3">
                                            <SplineDoubleKeyFrame KeySpline="0.0,0.03 0.32,1.0"
                                                                  Value="0"
                                                                  KeyTime="0:0:0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ShowButton"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Visibility)"
                                                                       Duration="0:0:0.3">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                    Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MainPanel"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Visibility)"
                                                                       Duration="0:0:0.3">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.3"
                                                                    Value="Collapsed" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_HideButton"
                                                                       Storyboard.TargetProperty="(UIElement.IsEnabled)"
                                                                       Duration="0:0:0.3">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                    Value="False" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <int:Interaction.Behaviors>
                            <!-- Tag is used here to trigger the SynchronizeMouseBehavior.  There aren't PropertyChanged 
                    events on Visibility, Opacity, or IsHitTestVisible and Behaviors can't bind to attached
                    properties, so there aren't many other options.  Tag is a lesser evil. -->
                            <int:SynchronizeMouseBehavior Trigger="{Binding AssociatedObject.Tag, RelativeSource={RelativeSource Self}}" />
                        </int:Interaction.Behaviors>

                        <Button x:Name="PART_ShowButton"
                                Margin="5"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                Width="22"
                                Height="22"
                                AutomationProperties.Name="{Binding AutomationNameDetailPaneShow, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerDetailPane}}"
                                Template="{StaticResource Template_InfoPaneShowButton}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                Foreground="{x:Null}"
                                IsTabStop="True">
                            <Path Margin="0,0,0,5"
                                  Opacity="0.65"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center"
                                  Width="3"
                                  Height="9.73"
                                  Stretch="Fill"
                                  UseLayoutRounding="False"
                                  Fill="{TemplateBinding Foreground}"
                                  Data="M 556.582,258.426C 557.686,258.426 558.582,259.322 558.582,260.426C 558.582,261.531 557.686,262.426 556.582,262.426C 555.477,262.426 554.582,261.531 554.582,260.426C 554.582,259.322 555.477,258.426 556.582,258.426 Z M 554.613,263.5L 558.613,263.5L 558.613,271.5L 554.613,271.5L 554.613,263.5 Z " />
                        </Button>

                        <Grid x:Name="MainPanel">
                            <Rectangle Fill="{TemplateBinding Background}"
                                       Stroke="{TemplateBinding BorderBrush}"
                                       RadiusX="3"
                                       RadiusY="3"
                                       Margin="0"
                                       IsHitTestVisible="False"
                                       Effect="{StaticResource DropShadowEffect}" />
                            <!--Added an extra Rectangle, because we are making the rectangle above not hittestable (see bug FB1877).
                    The side effect of that is it makes some parts of the InfoPane not hittestable as well, which is not desirable.
                    As a workaround, we are putting an identical rectangle that is hittestable but No dropshadow.
                    
                    TODO: if the silverlight bug for hittesting DropShadow effect in zoomed browsers ever get fixed... remove this rectangle
                    and make the rectangle above hittestable.
                 -->
                            <Rectangle Fill="Transparent"
                                       Stroke="Transparent"
                                       RadiusX="3"
                                       RadiusY="3"
                                       Margin="0" />
                            <!-- End of workaround -->

                            <Grid Margin="5,5,5,5">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <Button x:Name="PART_PreviousButton"
                                        Grid.Column="0"
                                        AutomationProperties.Name="{Binding AutomationNameDetailPanePreviousItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerDetailPane}}"
                                        Style="{StaticResource Style_Button_noBackground}"
                                        Foreground="{x:Null}">
                                    <!--<Path Width="10" Height="10" Stretch="Fill" UseLayoutRounding="False" Fill="{TemplateBinding Foreground}" 
                                                  Data="F1 M 400.725,285.21L 393.242,285.21L 396.023,282.332C 396.21,282.146 396.223,281.858 396.053,281.689L 395.047,280.057C 394.878,279.888 394.589,279.901 394.404,280.087L 388.204,286.287C 388.018,286.472 388.005,286.761 388.175,286.93L 390.103,288.878L 394.501,293.276C 394.634,293.409 394.878,293.378 395.047,293.21L 396.053,291.576C 396.223,291.407 396.254,291.164 396.121,291.032L 393.378,288.193L 400.725,288.193C 400.965,288.193 401.159,287.998 401.159,287.76L 401.159,285.643C 401.159,285.403 400.965,285.21 400.725,285.21 Z " />-->
                                </Button>
                                <Rectangle Grid.Column="1"
                                           VerticalAlignment="Center"
                                           Width="1"
                                           Height="10"
                                           Margin="5,0"
                                           Fill="{TemplateBinding Foreground}"
                                           Opacity="0.2"
                                           StrokeThickness="0" />
                                <Button x:Name="PART_NextButton"
                                        Grid.Column="2"
                                        AutomationProperties.Name="{Binding AutomationNameDetailPaneNextItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerDetailPane}}"
                                        Style="{StaticResource Style_Button_noBackground}"
                                        Foreground="{x:Null}">
                                    <Path Width="10"
                                          Height="10"
                                          Stretch="Fill"
                                          UseLayoutRounding="False"
                                          Data="F1 M 400.725,285.21L 393.242,285.21L 396.023,282.332C 396.21,282.146 396.223,281.858 396.053,281.689L 395.047,280.057C 394.878,279.888 394.589,279.901 394.404,280.087L 388.204,286.287C 388.018,286.472 388.005,286.761 388.175,286.93L 390.103,288.878L 394.501,293.276C 394.634,293.409 394.878,293.378 395.047,293.21L 396.053,291.576C 396.223,291.407 396.254,291.164 396.121,291.032L 393.378,288.193L 400.725,288.193C 400.965,288.193 401.159,287.998 401.159,287.76L 401.159,285.643C 401.159,285.403 400.965,285.21 400.725,285.21 Z "
                                          RenderTransformOrigin="0.5,0.5"
                                          Fill="{TemplateBinding Foreground}">
                                        <Path.RenderTransform>
                                            <ScaleTransform ScaleX="-1" />
                                        </Path.RenderTransform>
                                    </Path>
                                </Button>
                                <Button x:Name="PART_HideButton"
                                        Grid.Column="3"
                                        AutomationProperties.Name="{Binding AutomationNameDetailPaneHide, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerDetailPane}}"
                                        Style="{StaticResource Style_Button_noBackground}"
                                        HorizontalAlignment="Right"
                                        Foreground="{x:Null}">
                                    <Path Width="10"
                                          Height="10"
                                          Stretch="Fill"
                                          UseLayoutRounding="True"
                                          Fill="{TemplateBinding Foreground}"
                                          Data="F1 M 439.217,315.969C 435.085,320.102 431.701,318.698 431.702,312.859L 431.701,260.254C 431.7,254.418 426.916,249.635 421.079,249.633L 368.475,249.63C 362.635,249.633 361.234,246.249 365.365,242.116L 381.658,225.825C 385.79,221.694 393.959,218.306 399.79,218.314L 452.403,218.309C 458.243,218.309 463.025,223.093 463.025,228.932L 463.018,281.542C 463.025,287.373 459.64,295.544 455.51,299.675L 439.217,315.969 Z M 389.455,353.211C 386.024,356.643 383.214,355.477 383.215,350.628L 383.214,306.941C 383.213,302.094 379.24,298.122 374.392,298.12L 330.704,298.118C 325.855,298.12 324.691,295.31 328.123,291.878L 341.652,278.348C 345.086,274.917 351.869,272.104 356.712,272.111L 400.407,272.105C 405.256,272.105 409.228,276.079 409.228,280.928L 409.222,324.62C 409.228,329.464 406.417,336.249 402.986,339.678L 389.455,353.211 Z " />
                                </Button>

                                <con:CachedContentControl x:Name="PART_ContentRoot"
                                                          Grid.Row="1"
                                                          Grid.ColumnSpan="4"
                                                          VerticalAlignment="Stretch"
                                                          IsTabStop="False"
                                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                                          Content="{TemplateBinding Content}" />

                                <!-- Element which fades *in* to make it appear as if the ContentGrid is fading *out* -->
                                <Border x:Name="FadeOutFill"
                                        Grid.Row="1"
                                        Grid.ColumnSpan="4"
                                        Opacity="0"
                                        IsHitTestVisible="false"
                                        Background="{TemplateBinding Background}" />
                            </Grid>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <sdk:PivotViewerDefaultDetails Visibility="{Binding Visibility, RelativeSource={RelativeSource TemplatedParent}}"
                                                   Margin="0,1,0,0"
                                                   Width="190"
                                                   IsTabStop="False" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- DefaultDetailView resources -->

    <Style TargetType="sdk:PivotViewerDefaultDetails">
        <!-- Setting a default width gives more expected results when the developer fails to set any width -->
        <Setter Property="Width"
                Value="500" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="sdk:PivotViewerDefaultDetails">
                    <Grid>
                        <Border Padding="{TemplateBinding Margin}">
                            <Grid Margin="3,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Border x:Name="NameContainer">
                                    <con:HyperlinkMessageButton x:Name="Name"
                                                                Grid.Row="0"
                                                                FontSize="16"
                                                                Foreground="{Binding (con:FrameworkElementExtensions.Brushes)[LinkForeground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerDetailPane}}"
                                                                Style="{StaticResource BasicLinkControl}"
                                                                TargetName="_blank"
                                                                Background="Transparent"
                                                                Content="{Binding Name}"
                                                                NavigateUri="{Binding Href}"
                                                                AutomationProperties.Name="{Binding Name}"
                                                                Margin="0,3,0,2" />
                                </Border>
                                <Grid x:Name="MetadataRoot"
                                      Grid.Row="1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>

                                    <Border x:Name="PART_NameSpacer"
                                            Grid.Row="0"
                                            Height="8" />

                                    <ScrollViewer x:Name="ScrollRoot"
                                                  Grid.Row="1"
                                                  VerticalScrollBarVisibility="Auto"
                                                  Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerDetailPane}}"
                                                  Padding="0,0,4,0"
                                                  Style="{StaticResource InfoPaneScrollViewerStyle}"
                                                  IsTabStop="False"
                                                  Margin="1,0,0,0">
                                        <int:Interaction.Behaviors>
                                            <int:HandleMouseWheel />
                                            <int:ScrollToTopOnChangeBehavior MonitoredTarget="{Binding Model}" />
                                        </int:Interaction.Behaviors>
                                        <StackPanel>
                                            <!-- The TextBlock below is used to measure the height of five lines of text for 
                                            use as the MaxCollapsedHeight of the DynamicExpander.  Placing the TextBlock 
                                            into a StackPanel with Height=0 allows it to take its natural height while not 
                                            actually displaying in the UI -->
                                            <StackPanel Height="0">
                                                <TextBlock x:Name="LineSpacingElement"
                                                           Padding="1,0,0,4"
                                                           FontFamily="{Binding FontFamily, RelativeSource={RelativeSource TemplatedParent}}">
                                                    <TextBlock.Inlines>
                                                        <LineBreak />
                                                        <LineBreak />
                                                        <LineBreak />
                                                        <LineBreak />
                                                    </TextBlock.Inlines>
                                                </TextBlock>
                                            </StackPanel>
                                            <con:DynamicExpander x:Name="PART_DescriptionExpander"
                                                                 Padding="1,0,0,4"
                                                                 MaxCollapsedHeight="{Binding ActualHeight, ElementName=LineSpacingElement}"
                                                                 Style="{StaticResource DynamicExpanderStyle}"
                                                                 Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerDetailPane}}">
                                                <TextBlock x:Name="PART_DescriptionTextBlock"
                                                           HorizontalAlignment="Left"
                                                           Text="{Binding Description}"
                                                           TextWrapping="Wrap"
                                                           Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerDetailPane}}" />
                                            </con:DynamicExpander>
                                            <ItemsControl x:Name="FacetItemsControl"
                                                          ItemsSource="{Binding FilteredCustomFields}"
                                                          Style="{StaticResource FacetsItemsControlStyle}" />
                                        </StackPanel>
                                    </ScrollViewer>

                                    <Grid Grid.Row="2"
                                          x:Name="PART_RelatedCollectionsContainer">
                                        <Grid x:Name="PART_RelatedCollectionsRoot">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="*" />
                                            </Grid.RowDefinitions>
                                            <StackPanel x:Name="PART_FacetCategoriesSeparator"
                                                        Grid.Row="0"
                                                        Margin="-2,0,0,0">
                                                <Rectangle Style="{StaticResource SeparatorStyle}"
                                                           Fill="{Binding BorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerDetailPane}}" />
                                                <Border Height="4" />
                                            </StackPanel>
                                            <TextBlock Padding="0,2"
                                                       Grid.Row="1"
                                                       FontSize="12"
                                                       Text="{Binding RelatedCollectionsString}"
                                                       Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerDetailPane}}" />
                                            <ItemsControl x:Name="PART_RelatedCollectionsItemsControl"
                                                          Grid.Row="2"
                                                          ItemsSource="{Binding RelatedCollections}"
                                                          ItemTemplate="{StaticResource ShLinkFacetDataTemplate}"
                                                          ItemsPanel="{StaticResource FacetListPanel}"
                                                          Margin="0,1,0,2" />
                                        </Grid>
                                    </Grid>
                                </Grid>

                                <Border x:Name="PART_CopyrightSpacer"
                                        Grid.Row="2"
                                        Height="7" />

                                <con:HyperlinkMessageButton x:Name="Copyright"
                                                            Grid.Row="3"
                                                            Padding="0,0,0,0"
                                                            VerticalAlignment="Bottom"
                                                            BorderThickness="0"
                                                            Foreground="{Binding SecondaryForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerDetailPane}}"
                                                            FontSize="9"
                                                            Style="{StaticResource BasicLinkControl}"
                                                            TargetName="_blank"
                                                            Content="{Binding Copyright.Text}"
                                                            NavigateUri="{Binding Copyright.Uri}"
                                                            AutomationProperties.Name="{Binding Copyright.Text}" />
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <con:AlternationConverter x:Key="AlternateBackgroundConverter">
        <SolidColorBrush Color="{Binding PrimaryItemValueBackgroundColor, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerDetailPane}}" />
        <SolidColorBrush Color="{Binding SecondaryItemValueBackgroundColor, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerDetailPane}}" />
    </con:AlternationConverter>

    <Style x:Key="BlankButton"
           TargetType="ButtonBase">
        <Setter Property="Background"
                Value="{x:Null}" />
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
    </Style>

    <Style x:Key="LinkButton"
           TargetType="ButtonBase"
           BasedOn="{StaticResource BlankButton}">
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="Cursor"
                Value="Hand" />
    </Style>

    <Style x:Key="FadingLinkControl"
           TargetType="ButtonBase"
           BasedOn="{StaticResource LinkButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="BG_normal">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="BG_normal"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="BG_normal"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="contentPresenter"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="FocusBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="BG_normal"
                                   Margin="0"
                                   Fill="{TemplateBinding Background}"
                                   Stroke="{TemplateBinding BorderBrush}" />
                        <con:FadingTextBlock x:Name="contentPresenter"
                                             Foreground="{TemplateBinding Foreground}"
                                             BlockForeground="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerDetailPane}}"
                                             BlockBorder="{Binding BorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerDetailPane}}"
                                             BlockBackground="{Binding Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerDetailPane}}"
                                             HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                             Margin="{TemplateBinding Padding}"
                                             VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                             Text="{TemplateBinding Content}" />
                        <Border x:Name="FocusBorder"
                                Margin="-3,0,0,0"
                                Visibility="Collapsed"
                                BorderThickness="{StaticResource FocusedBorderThickness}"
                                BorderBrush="{Binding (con:FrameworkElementExtensions.Brushes)[FocusBorderBrush], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerDetailPane}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BasicLinkControl"
           TargetType="ButtonBase"
           BasedOn="{StaticResource LinkButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="BG_normal">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="BG_normal"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.TextDecorations)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Underline" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="BG_normal"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Foreground)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerDetailPane}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="FocusBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="BG_normal"
                                   Margin="0"
                                   Fill="{TemplateBinding Background}"
                                   Stroke="{TemplateBinding BorderBrush}" />
                        <TextBlock Foreground="{TemplateBinding Foreground}"
                                   x:Name="contentPresenter"
                                   TextWrapping="Wrap"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   Margin="{TemplateBinding Padding}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   Text="{TemplateBinding Content}" />
                        <Border x:Name="FocusBorder"
                                Margin="-5,0,0,0"
                                Visibility="Collapsed"
                                BorderThickness="{StaticResource FocusedBorderThickness}"
                                BorderBrush="{Binding (con:FrameworkElementExtensions.Brushes)[FocusBorderBrush], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerDetailPane}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Duplicate -->
    <DataTemplate x:Key="ShLinkFacetDataTemplate">
        <con:HyperlinkMessageButton Style="{StaticResource BasicLinkControl}"
                                    TargetName="_blank"
                                    Foreground="{Binding (con:FrameworkElementExtensions.Brushes)[LinkForeground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerDetailPane}}"
                                    Content="{Binding Text}"
                                    NavigateUri="{Binding Uri}" />
    </DataTemplate>

    <ItemsPanelTemplate x:Key="FacetListPanel">
        <StackPanel />
    </ItemsPanelTemplate>

    <Style x:Key="InfoPaneScrollViewerStyle"
           TargetType="ScrollViewer">
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Top" />
        <Setter Property="VerticalScrollBarVisibility"
                Value="Visible" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter x:Name="ScrollContentPresenter"
                                                Cursor="{TemplateBinding Cursor}"
                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                Margin="{TemplateBinding Padding}" />
                        <ScrollBar x:Name="VerticalScrollBar"
                                   con:PivotScrollBar.ButtonHover="{Binding (con:FrameworkElementExtensions.Brushes)[ControlHoverBackground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerDetailPane}}"
                                   con:PivotScrollBar.ThumbHover="{Binding (con:FrameworkElementExtensions.Brushes)[ControlHoverBackground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerDetailPane}}"
                                   Grid.Column="1"
                                   IsTabStop="False"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   Margin="0,-1,-1,-1"
                                   Minimum="0"
                                   Orientation="Vertical"
                                   Grid.Row="0"
                                   Foreground="{TemplateBinding Foreground}"
                                   Background="{Binding ControlBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerDetailPane}}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Value="{TemplateBinding VerticalOffset}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Style="{StaticResource CustomScrollBar}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="FacetTemplate">
        <Grid HorizontalAlignment="Stretch"
              Background="{Binding (con:ItemsControlAlternationExtensions.AlternationIndex), 
                                   Converter={StaticResource AlternateBackgroundConverter}, 
                                   RelativeSource={RelativeSource TemplatedParent}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <TextBlock HorizontalAlignment="Left"
                       VerticalAlignment="Top"
                       Margin="3,0,0,2"
                       Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerDetailPane}}"
                       Text="{Binding Key.DisplayName}" />

            <ItemsControl Margin="3,0,0,2"
                          Grid.Row="1"
                          ItemsSource="{Binding Value}"
                          ItemsPanel="{StaticResource FacetValuePanel}"
                          ItemTemplate="{Binding ConverterParameter={StaticResource FacetDataTemplates}, Converter={StaticResource InfoPaneFacetDataTemplateSelector}}"
                          HorizontalAlignment="Stretch"
                          IsTabStop="False" />
        </Grid>
    </DataTemplate>

    <ItemsPanelTemplate x:Key="FacetValuePanel">
        <StackPanel />
    </ItemsPanelTemplate>

    <Style x:Key="FacetsItemsControlStyle"
           TargetType="ItemsControl">
        <Setter Property="con:ItemsControlAlternationExtensions.AlternationCount"
                Value="2" />
        <Setter Property="ItemsPanel"
                Value="{StaticResource FacetListPanel}" />
        <Setter Property="ItemTemplate"
                Value="{StaticResource FacetTemplate}" />
        <Setter Property="IsTabStop"
                Value="False" />
    </Style>

    <Style x:Key="Style_ExpandButton"
           TargetType="Button">
        <Setter Property="Background"
                Value="{x:Null}" />
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.65" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="BG_hover"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="BG_normal"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.8" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="BG_normal"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="BG_hover"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.8" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="contentPresenter"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0.2" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="FocusBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="BG_normal"
                                   Margin="0"
                                   Fill="{Binding (con:FrameworkElementExtensions.Brushes)[SecondaryControlBackground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerDetailPane}}"
                                   Stroke="{TemplateBinding BorderBrush}" />
                        <Rectangle x:Name="BG_hover"
                                   Margin="0"
                                   Fill="{Binding (con:FrameworkElementExtensions.Brushes)[SecondaryControlHoverBackground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerDetailPane}}"
                                   Opacity="0" />
                        <ContentPresenter x:Name="contentPresenter"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}" />
                        <Border x:Name="FocusBorder"
                                Visibility="Collapsed"
                                BorderThickness="{StaticResource FocusedBorderThickness}"
                                BorderBrush="{Binding (con:FrameworkElementExtensions.Brushes)[FocusBorderBrush], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerDetailPane}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DynamicExpanderStyle"
           TargetType="con:DynamicExpander">
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="con:DynamicExpander">
                    <Grid x:Name="PART_Root"
                          Background="{TemplateBinding Background}">
                        <Grid.Resources>
                            <DoubleAnimationUsingKeyFrames x:Key="RESOURCE_DynamicExpanderAnim"
                                                           Duration="0:0:0.3"
                                                           Storyboard.TargetProperty="Height">
                                <SplineDoubleKeyFrame KeySpline="0,0.03,0.32,1"
                                                      KeyTime="0:0:0.3"
                                                      Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <StackPanel x:Name="PART_ContentHolder"
                                    con:FrameworkElementExtensions.ClipToBounds="true"
                                    Grid.Row="0">
                            <ContentPresenter x:Name="PART_Content"
                                              HorizontalAlignment="Stretch" />
                        </StackPanel>
                        <Button x:Name="PART_ExpanderButton"
                                Content="{TemplateBinding ButtonLabel}"
                                Grid.Row="1"
                                VerticalAlignment="Top"
                                BorderBrush="{x:Null}"
                                HorizontalAlignment="Left"
                                Margin="0,3,0,5"
                                Padding="3,2"
                                Style="{StaticResource Style_ExpandButton}"
                                Foreground="{TemplateBinding Foreground}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ContentControl x:Name="FacetDataTemplates">
        <ContentControl.Resources>

            <DataTemplate x:Key="ShLinkFacetDataTemplate">
                <con:HyperlinkMessageButton Style="{StaticResource BasicLinkControl}"
                                            TargetName="_blank"
                                            Foreground="{Binding (con:FrameworkElementExtensions.Brushes)[LinkForeground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerDetailPane}}"
                                            Content="{Binding Text}"
                                            NavigateUri="{Binding Uri}" />
            </DataTemplate>

            <DataTemplate x:Key="FilterableFacetDataTemplate">
                <Button Style="{StaticResource FadingLinkControl}"
                        Foreground="{Binding (con:FrameworkElementExtensions.Brushes)[LinkForeground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerDetailPane}}"
                        Background="{Binding (con:FrameworkElementExtensions.Brushes)[ControlHoverBackground], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerDetailPane}}"
                        Cursor="Arrow"
                        Content="{Binding Item1}"
                        Command="{Binding ElementName=FacetItemsControl, Path=DataContext.FilterClickedCommand}"
                        CommandParameter="{Binding Item2}" />
            </DataTemplate>

            <DataTemplate x:Key="LongStringFacetDataTemplate">
                <TextBlock Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerDetailPane}}"
                           TextWrapping="Wrap"
                           Text="{Binding}"
                           TextAlignment="Left" />
            </DataTemplate>

            <DataTemplate x:Key="DefaultFacetDataTemplate">
                <con:FadingTextBlock Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerDetailPane}}"
                                     BlockBorder="{Binding BorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerDetailPane}}"
                                     BlockBackground="{Binding Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerDetailPane}}"
                                     BlockForeground="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerDetailPane}}"
                                     Text="{Binding}"
                                     TextAlignment="Left" />
            </DataTemplate>

        </ContentControl.Resources>
    </ContentControl>

    <con:InfoPaneFacetDataTemplateSelector x:Key="InfoPaneFacetDataTemplateSelector" />

    <!-- Styles from Core -->

    <!-- CachedContentControl style -->
    <Style TargetType="con:CachedContentControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="con:CachedContentControl">
                    <Grid>
                        <ContentPresenter x:Name="PART_Content"
                                          Opacity="1" />
                        <Image x:Name="PART_Image"
                               Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- CrossFadeControl style -->
    <Style TargetType="con:CrossFadeControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="con:CrossFadeControl">
                    <Grid x:Name="PART_AnimationContainer">
                        <Grid.Resources>
                            <DoubleAnimationUsingKeyFrames x:Key="PART_FadeOutAnimation"
                                                           Storyboard.TargetProperty="Opacity"
                                                           Duration="0:0:1">
                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" />
                                <SplineDoubleKeyFrame Value="0"
                                                      KeyTime="0:0:1"
                                                      KeySpline="0.8,0,0.2,1" />
                            </DoubleAnimationUsingKeyFrames>

                            <DoubleAnimationUsingKeyFrames x:Key="PART_FadeInAnimation"
                                                           Storyboard.TargetProperty="Opacity"
                                                           Duration="0:0:1">
                                <DiscreteDoubleKeyFrame Value="0"
                                                        KeyTime="0:0:0" />
                                <SplineDoubleKeyFrame Value="1"
                                                      KeyTime="0:0:1"
                                                      KeySpline="0.8,0,0.2,1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Grid.Resources>
                        <ContentPresenter x:Name="PART_ContentPresenter"
                                          VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                          Content="{TemplateBinding Content}"
                                          Margin="{TemplateBinding Padding}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}" />
                        <Grid x:Name="PART_FadeOutPanel"
                              IsHitTestVisible="False" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- RangeSlider -->
    <Style TargetType="con:RangeSlider">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="con:RangeSlider">
                    <Grid Height="23"
                          Margin="0,0,0,0">
                        <Grid.Resources>
                            <Style x:Key="SliderThumbStyleMiddle"
                                   TargetType="Thumb">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Thumb">
                                            <Grid Background="Transparent">
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal" />
                                                        <VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)"
                                                                                               Storyboard.TargetName="ColorBox">
                                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                                            Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerDetailPane}}" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="FocusStates">
                                                        <VisualState x:Name="Focused">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                                               Storyboard.TargetName="FocusBorder">
                                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                                            Value="Visible" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Unfocused" />
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Rectangle x:Name="ColorBox"
                                                           Fill="{TemplateBinding Background}"
                                                           Height="12"
                                                           Stroke="{TemplateBinding Foreground}"
                                                           Opacity="0.8"
                                                           Margin="-1,0,-1,0" />
                                                <Border x:Name="FocusBorder"
                                                        Margin="0,2,0,2"
                                                        Visibility="Collapsed"
                                                        BorderThickness="{StaticResource FocusedBorderThickness}"
                                                        BorderBrush="{Binding RangeSliderBorderbrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=con:RangeSlider}}" />
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <Style x:Key="SliderThumbStyle"
                                   TargetType="Thumb">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Thumb">
                                            <Grid Background="Transparent">
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal" />
                                                        <VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)"
                                                                                               Storyboard.TargetName="SliderThumbPath">
                                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                                            Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=sdk:PivotViewerDetailPane}}" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="FocusStates">
                                                        <VisualState x:Name="Focused">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                                               Storyboard.TargetName="FocusBorder">
                                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                                            Value="Visible" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Unfocused" />
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Rectangle x:Name="SliderThumbPath"
                                                           Fill="{TemplateBinding Background}"
                                                           Width="7"
                                                           VerticalAlignment="Center"
                                                           Height="16"
                                                           Stroke="{TemplateBinding Foreground}">
                                                </Rectangle>
                                                <Border x:Name="FocusBorder"
                                                        Visibility="Collapsed"
                                                        BorderThickness="{StaticResource FocusedBorderThickness}"
                                                        BorderBrush="{Binding RangeSliderBorderbrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=con:RangeSlider}}" />
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_LeftThumb"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=NormalBackground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_MiddleThumb"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=NormalBackground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_RightThumb"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=NormalBackground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOverMiddle">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_LeftThumb"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HoverBackground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_MiddleThumb"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HoverBackground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_RightThumb"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HoverBackground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOverLeft">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_LeftThumb"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HoverBackground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_MiddleThumb"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=NormalBackground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_RightThumb"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=NormalBackground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOverRight">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_LeftThumb"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=NormalBackground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_MiddleThumb"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=NormalBackground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_RightThumb"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HoverBackground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="PART_SliderTrack"
                                Height="14"
                                CornerRadius="1"
                                BorderThickness="1"
                                Background="{TemplateBinding Background}" />

                        <Canvas x:Name="PART_ThumbCanvas"
                                Background="Blue"
                                VerticalAlignment="Center">
                            <Grid x:Name="PART_ThumbGrid"
                                  Canvas.Left="0"
                                  Canvas.Top="-8">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <Thumb x:Name="PART_MiddleThumb"
                                       Cursor="Hand"
                                       Grid.Column="1"
                                       Style="{StaticResource SliderThumbStyleMiddle}"
                                       Background="{TemplateBinding BorderBrush}"
                                       Foreground="{TemplateBinding Foreground}"
                                       TabIndex="1"
                                       MinWidth="2"
                                       IsTabStop="True" />
                                <Thumb x:Name="PART_LeftThumb"
                                       Cursor="SizeWE"
                                       Width="7"
                                       Grid.Column="0"
                                       Background="{TemplateBinding BorderBrush}"
                                       Foreground="{TemplateBinding Foreground}"
                                       Style="{StaticResource SliderThumbStyle}"
                                       TabIndex="0"
                                       IsTabStop="True" />

                                <Thumb x:Name="PART_RightThumb"
                                       Cursor="SizeWE"
                                       Width="7"
                                       Grid.Column="2"
                                       Background="{TemplateBinding BorderBrush}"
                                       Foreground="{TemplateBinding Foreground}"
                                       Style="{StaticResource SliderThumbStyle}"
                                       TabIndex="2"
                                       IsTabStop="True" />
                            </Grid>
                        </Canvas>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- FadingTextBlock style -->
    <Style TargetType="con:FadingTextBlock">
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="con:FadingTextBlock">
                    <Grid>
                        <Border x:Name="PART_FTBBorder"
                                Background="Transparent">
                            <Grid>
                                <TextBlock x:Name="PART_MainTextBlock"
                                           Text="{TemplateBinding Text}"
                                           TextAlignment="{TemplateBinding TextAlignment}"
                                           FontFamily="{TemplateBinding FontFamily}"
                                           FontSize="{TemplateBinding FontSize}"
                                           FontStyle="{TemplateBinding FontStyle}"
                                           FontWeight="{TemplateBinding FontWeight}"
                                           Foreground="{TemplateBinding Foreground}" />
                                <TextBlock x:Name="PART_FadeTextBlock"
                                           Text="{TemplateBinding Text}"
                                           TextAlignment="{TemplateBinding TextAlignment}"
                                           FontFamily="{TemplateBinding FontFamily}"
                                           FontSize="{TemplateBinding FontSize}"
                                           FontStyle="{TemplateBinding FontStyle}"
                                           FontWeight="{TemplateBinding FontWeight}"
                                           Foreground="{TemplateBinding Foreground}" />
                            </Grid>
                        </Border>
                        <!-- Set the popup's data context to null otherwise the bindings will
                             cause the popup to be leaked. The data context is set and cleared
                             in code instead. -->
                        <Popup x:Name="PART_Popup"
                               IsHitTestVisible="false">
                            <Border x:Name="PART_PopupBorder"
                                    Margin="-4,-2,0,0"
                                    BorderThickness="1"
                                    IsHitTestVisible="false"
                                    DataContext="{x:Null}">
                                <TextBlock x:Name="PART_PopupTextBlock"
                                           FontFamily="{Binding FontFamily}"
                                           FontSize="{Binding FontSize}"
                                           FontStretch="{Binding FontStretch}"
                                           FontStyle="{Binding FontStyle}"
                                           FontWeight="{Binding FontWeight}"
                                           Padding="{Binding Padding}"
                                           Text="{Binding Text}"
                                           IsHitTestVisible="False"
                                           TextTrimming="None"
                                           TextWrapping="NoWrap"
                                           Margin="3,1,3,1" />
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- DynamicExpander style -->
    <Style TargetType="con:DynamicExpander">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="con:DynamicExpander">
                    <Grid Background="{TemplateBinding Background}"
                          x:Name="PART_Root">
                        <Grid.Resources>
                            <DoubleAnimationUsingKeyFrames x:Key="RESOURCE_DynamicExpanderAnim"
                                                           Storyboard.TargetProperty="Height"
                                                           Duration="0:0:0.3">
                                <SplineDoubleKeyFrame KeyTime="0:0:0.3"
                                                      Value="0"
                                                      KeySpline="0,0.03,0.32,1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <StackPanel x:Name="PART_ContentHolder"
                                    con:FrameworkElementExtensions.ClipToBounds="true"
                                    Grid.Row="0">
                            <ContentPresenter x:Name="PART_Content"
                                              HorizontalAlignment="Stretch" />
                        </StackPanel>
                        <Button x:Name="PART_ExpanderButton"
                                Grid.Row="1"
                                VerticalAlignment="Bottom" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Hover label control style -->
    <Style TargetType="con:FadeVisibilityControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="con:FadeVisibilityControl">
                    <Grid x:Name="RootGrid">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="VisibilityStates">
                                <VisualState x:Name="Show">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Duration="0:0:0">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Duration="0:0:0.8">
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                                    Value="0" />
                                            <SplineDoubleKeyFrame KeyTime="0:0:0.8"
                                                                  KeySpline="0.8,0,0.2,1"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Hide">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Duration="0:0:0.8">
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                                    Value="1" />
                                            <SplineDoubleKeyFrame KeyTime="0:0:0.8"
                                                                  KeySpline="0.8,0,0.2,1"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Duration="0:0:0.8">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.8">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="ContentPresenter"
                                          Content="{TemplateBinding Content}"
                                          Opacity="0"
                                          Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="con:NestableButton">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="con:NestableButton">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter Content="{TemplateBinding Content}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <!-- REVIEW (alwu): Styles for controls from toolkit -->

    <!--  con:HeaderedContentControl  -->
    <Style TargetType="con:HeaderedContentControl">
        <Setter Property="Foreground"
                Value="#FF000000" />
        <!-- <Setter Property="FontSize" Value="11" /> -->
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="con:HeaderedContentControl">
                    <StackPanel>
                        <ContentPresenter Content="{TemplateBinding Header}"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                          Cursor="{TemplateBinding Cursor}"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        <ContentPresenter Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Cursor="{TemplateBinding Cursor}"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  con:AccordionButton  -->
    <Style TargetType="con:AccordionButton">
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Background"
                Value="White" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="VerticalAlignment"
                Value="Stretch" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="IsTabStop"
                Value="True" />
        <Setter Property="TabNavigation"
                Value="Once" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="con:AccordionButton">
                    <Grid Margin="{TemplateBinding Padding}"
                          Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ExpandDirectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="ExpandDown">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0"
                                                                       Duration="0"
                                                                       Storyboard.TargetName="icon"
                                                                       Storyboard.TargetProperty="(Grid.Column)">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="0" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0"
                                                                       Duration="0"
                                                                       Storyboard.TargetName="icon"
                                                                       Storyboard.TargetProperty="(Grid.Row)">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="0" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0"
                                                                       Duration="0"
                                                                       Storyboard.TargetName="header"
                                                                       Storyboard.TargetProperty="(Grid.Column)">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="1" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0"
                                                                       Duration="0"
                                                                       Storyboard.TargetName="header"
                                                                       Storyboard.TargetProperty="(Grid.Row)">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="0" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0"
                                                                       Duration="0"
                                                                       Storyboard.TargetName="cd0"
                                                                       Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Auto" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0"
                                                                       Duration="0"
                                                                       Storyboard.TargetName="cd1"
                                                                       Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="*" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation BeginTime="00:00:00"
                                                         Duration="00:00:00"
                                                         Storyboard.TargetName="arrow"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
                                                         To="-90" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ExpandUp">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0"
                                                                       Duration="0"
                                                                       Storyboard.TargetName="icon"
                                                                       Storyboard.TargetProperty="(Grid.Column)">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="1" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0"
                                                                       Duration="0"
                                                                       Storyboard.TargetName="icon"
                                                                       Storyboard.TargetProperty="(Grid.Row)">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="1" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0"
                                                                       Duration="0"
                                                                       Storyboard.TargetName="header"
                                                                       Storyboard.TargetProperty="(Grid.Column)">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="0" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0"
                                                                       Duration="0"
                                                                       Storyboard.TargetName="header"
                                                                       Storyboard.TargetProperty="(Grid.Row)">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="1" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0"
                                                                       Duration="0"
                                                                       Storyboard.TargetName="cd0"
                                                                       Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="*" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0"
                                                                       Duration="0"
                                                                       Storyboard.TargetName="cd1"
                                                                       Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Auto" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation BeginTime="00:00:00"
                                                         Duration="00:00:00"
                                                         Storyboard.TargetName="arrow"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
                                                         To="90" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ExpandLeft">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0"
                                                                       Duration="0"
                                                                       Storyboard.TargetName="icon"
                                                                       Storyboard.TargetProperty="(Grid.Column)">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="1" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0"
                                                                       Duration="0"
                                                                       Storyboard.TargetName="icon"
                                                                       Storyboard.TargetProperty="(Grid.Row)">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="0" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0"
                                                                       Duration="0"
                                                                       Storyboard.TargetName="header"
                                                                       Storyboard.TargetProperty="(Grid.Column)">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="1" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0"
                                                                       Duration="0"
                                                                       Storyboard.TargetName="header"
                                                                       Storyboard.TargetProperty="(Grid.Row)">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="1" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0"
                                                                       Duration="0"
                                                                       Storyboard.TargetName="rd0"
                                                                       Storyboard.TargetProperty="Height">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Auto" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0"
                                                                       Duration="0"
                                                                       Storyboard.TargetName="rd1"
                                                                       Storyboard.TargetProperty="Height">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="*" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0"
                                                                       Duration="0"
                                                                       Storyboard.TargetName="header"
                                                                       Storyboard.TargetProperty="LayoutTransform">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <TransformGroup>
                                                        <RotateTransform Angle="90" />
                                                    </TransformGroup>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation BeginTime="00:00:00"
                                                         Duration="00:00:00"
                                                         Storyboard.TargetName="arrow"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
                                                         To="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ExpandRight">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0"
                                                                       Duration="0"
                                                                       Storyboard.TargetName="icon"
                                                                       Storyboard.TargetProperty="(Grid.Column)">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="0" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0"
                                                                       Duration="0"
                                                                       Storyboard.TargetName="icon"
                                                                       Storyboard.TargetProperty="(Grid.Row)">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="1" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0"
                                                                       Duration="0"
                                                                       Storyboard.TargetName="header"
                                                                       Storyboard.TargetProperty="(Grid.Column)">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="0" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0"
                                                                       Duration="0"
                                                                       Storyboard.TargetName="header"
                                                                       Storyboard.TargetProperty="(Grid.Row)">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="0" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0"
                                                                       Duration="0"
                                                                       Storyboard.TargetName="rd0"
                                                                       Storyboard.TargetProperty="Height">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="*" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0"
                                                                       Duration="0"
                                                                       Storyboard.TargetName="rd1"
                                                                       Storyboard.TargetProperty="Height">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Auto" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0"
                                                                       Duration="0"
                                                                       Storyboard.TargetName="header"
                                                                       Storyboard.TargetProperty="LayoutTransform">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <TransformGroup>
                                                        <RotateTransform Angle="-90" />
                                                    </TransformGroup>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation BeginTime="00:00:00"
                                                         Duration="00:00:00"
                                                         Storyboard.TargetName="arrow"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
                                                         To="180" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Collapsed">
                                    <Storyboard>
                                        <DoubleAnimation BeginTime="00:00:00"
                                                         Duration="00:00:00.3"
                                                         Storyboard.TargetName="icon"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
                                                         To="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <DoubleAnimation BeginTime="00:00:00"
                                                         Duration="00:00:00.3"
                                                         Storyboard.TargetName="icon"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
                                                         To="90" />
                                        <ColorAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                      Duration="00:00:00.0010000"
                                                                      Storyboard.TargetName="ExpandedBackground"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <SplineColorKeyFrame KeyTime="00:00:00"
                                                                 Value="#FFBADDE9" />
                                        </ColorAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="ExpandedBackground"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="00:00:00" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Checked" />
                                <VisualState x:Name="Unchecked" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                    <VisualTransition From="MouseOver"
                                                      GeneratedDuration="00:00:00.1"
                                                      To="Normal" />
                                    <VisualTransition GeneratedDuration="00:00:00.1"
                                                      To="MouseOver" />
                                    <VisualTransition GeneratedDuration="00:00:00.1"
                                                      To="Pressed" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation BeginTime="0"
                                                        Storyboard.TargetName="arrow"
                                                        Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)"
                                                        To="#222" />
                                        <ColorAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                      Duration="00:00:00.0010000"
                                                                      Storyboard.TargetName="MouseOverBackground"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <SplineColorKeyFrame KeyTime="00:00:00"
                                                                 Value="#FFBADDE9" />
                                        </ColorAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="MouseOverBackground"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation BeginTime="0"
                                                        Storyboard.TargetName="arrow"
                                                        Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)"
                                                        To="#FF003366" />
                                        <ColorAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                      Duration="00:00:00.0010000"
                                                                      Storyboard.TargetName="MouseOverBackground"
                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <SplineColorKeyFrame KeyTime="00:00:00"
                                                                 Value="#ff737573" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard />
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="FocusVisualElement"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="FocusVisualElement"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0.385" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="background"
                                Background="{TemplateBinding Background}"
                                CornerRadius="1,1,1,1">
                            <Grid>
                                <Border Height="Auto"
                                        Margin="0,0,0,0"
                                        x:Name="ExpandedBackground"
                                        VerticalAlignment="Stretch"
                                        Opacity="0"
                                        Background="#FFBADDE9"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="1,1,1,1" />
                                <Border Height="Auto"
                                        Margin="0,0,0,0"
                                        x:Name="MouseOverBackground"
                                        VerticalAlignment="Stretch"
                                        Opacity="0"
                                        Background="#FFBDBDBD"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="1,1,1,1" />
                                <Grid Background="Transparent">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"
                                                          x:Name="cd0" />
                                        <ColumnDefinition Width="Auto"
                                                          x:Name="cd1" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"
                                                       x:Name="rd0" />
                                        <RowDefinition Height="Auto"
                                                       x:Name="rd1" />
                                    </Grid.RowDefinitions>
                                    <Grid Height="19"
                                          HorizontalAlignment="Center"
                                          x:Name="icon"
                                          VerticalAlignment="Center"
                                          Width="19"
                                          RenderTransformOrigin="0.5,0.5"
                                          Grid.Column="0"
                                          Grid.Row="0">
                                        <Grid.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform />
                                                <SkewTransform />
                                                <RotateTransform Angle="-90" />
                                                <TranslateTransform />
                                            </TransformGroup>
                                        </Grid.RenderTransform>
                                        <Path Height="Auto"
                                              HorizontalAlignment="Center"
                                              Margin="0,0,0,0"
                                              x:Name="arrow"
                                              VerticalAlignment="Center"
                                              Width="Auto"
                                              RenderTransformOrigin="0.5,0.5"
                                              Stroke="#666"
                                              StrokeThickness="2"
                                              Data="M 1,1.5 L 4.5,5 L 8,1.5">
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform />
                                                    <SkewTransform />
                                                    <RotateTransform />
                                                    <TranslateTransform />
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                        </Path>
                                    </Grid>
                                    <con:LayoutTransformer FontFamily="{TemplateBinding FontFamily}"
                                                           FontSize="{TemplateBinding FontSize}"
                                                           FontStretch="{TemplateBinding FontStretch}"
                                                           FontStyle="{TemplateBinding FontStyle}"
                                                           FontWeight="{TemplateBinding FontWeight}"
                                                           Foreground="{TemplateBinding Foreground}"
                                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                           Margin="6,6,6,0"
                                                           x:Name="header"
                                                           Grid.Column="1"
                                                           Grid.Row="0"
                                                           Grid.RowSpan="1"
                                                           Content="{TemplateBinding Content}"
                                                           ContentTemplate="{TemplateBinding ContentTemplate}" />
                                </Grid>
                            </Grid>
                        </Border>
                        <Rectangle x:Name="FocusVisualElement"
                                   IsHitTestVisible="false"
                                   Visibility="Collapsed"
                                   RadiusX="1"
                                   RadiusY="1"
                                   Stroke="#FF6DBDD1"
                                   StrokeThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  con:ExpandableContentControl  -->
    <Style TargetType="con:ExpandableContentControl">
        <Setter Property="IsEnabled"
                Value="true" />
        <Setter Property="Cursor"
                Value="Arrow" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="TabNavigation"
                Value="Once" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="con:ExpandableContentControl">
                    <ContentPresenter x:Name="ContentSite"
                                      Cursor="{TemplateBinding Cursor}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Margin="0"
                                      ContentTemplate="{TemplateBinding ContentTemplate}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  con:Accordion  -->
    <Style TargetType="con:Accordion">
        <Setter Property="Foreground"
                Value="#FF000000" />
        <Setter Property="BorderBrush"
                Value="#FFEAEAEA" />
        <Setter Property="HorizontalAlignment"
                Value="Left" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Top" />
        <Setter Property="Cursor"
                Value="Arrow" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="TabNavigation"
                Value="Once" />
        <!-- Accordion expects a stackpanel to layout its children. -->
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel VerticalAlignment="Top" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="con:Accordion">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <!-- common states -->
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <!-- focus states -->
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <ScrollViewer IsTabStop="False"
                                          HorizontalScrollBarVisibility="Disabled"
                                          VerticalScrollBarVisibility="Disabled"
                                          Background="{x:Null}"
                                          BorderBrush="Transparent"
                                          Margin="0"
                                          Padding="0"
                                          BorderThickness="0">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  con:AccordionItem  -->
    <Style TargetType="con:AccordionItem">
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="BorderBrush"
                Value="#FFECECEC" />
        <Setter Property="Background"
                Value="White" />
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="VerticalAlignment"
                Value="Stretch" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Top" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="con:AccordionItem">
                    <Grid Background="{TemplateBinding Background}"
                          HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                          VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <VisualStateManager.VisualStateGroups>
                            <!-- CommonState -->
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <!-- FocusStates -->
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <!-- ExpansionStates -->
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Collapsed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetName="ExpandSite"
                                                                       Storyboard.TargetProperty="(ExpandableContentControl.Percentage)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.3"
                                                                  KeySpline="0.2,0,0,1"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00.3"
                                                                       Duration="00:00:00"
                                                                       Storyboard.TargetName="ExpandSite"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetName="ExpandSite"
                                                                       Storyboard.TargetProperty="(ExpandableContentControl.Percentage)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.3"
                                                                  KeySpline="0.2,0,0,1"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <!-- ExpansionStates -->
                            <VisualStateGroup x:Name="LockedStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Locked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="ExpanderButton"
                                                                       Storyboard.TargetProperty="IsEnabled">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="False" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unlocked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="ExpanderButton"
                                                                       Storyboard.TargetProperty="IsEnabled">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="True" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <!-- ExpandDirectionStates-->
                            <VisualStateGroup x:Name="ExpandDirectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="ExpandDown">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="rd1"
                                                                       Storyboard.TargetProperty="Height">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="*" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="cd0"
                                                                       Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="*" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ExpandUp">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="ExpanderButton"
                                                                       Storyboard.TargetProperty="(Grid.Row)">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="1" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="ExpandSite"
                                                                       Storyboard.TargetProperty="(Grid.Row)">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="0" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="rd0"
                                                                       Storyboard.TargetProperty="Height">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="*" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="cd0"
                                                                       Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="*" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ExpandLeft">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="ExpanderButton"
                                                                       Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="1" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="ExpandSite"
                                                                       Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="1" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="ExpanderButton"
                                                                       Storyboard.TargetProperty="(Grid.RowSpan)">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="2" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="ExpandSite"
                                                                       Storyboard.TargetProperty="(Grid.RowSpan)">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="2" />
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="ExpanderButton"
                                                                       Storyboard.TargetProperty="(Grid.Column)">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="1" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="ExpandSite"
                                                                       Storyboard.TargetProperty="(Grid.Row)">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="0" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="rd0"
                                                                       Storyboard.TargetProperty="Height">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="*" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="cd0"
                                                                       Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="*" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ExpandRight">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="ExpanderButton"
                                                                       Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="1" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="ExpandSite"
                                                                       Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="1" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="ExpanderButton"
                                                                       Storyboard.TargetProperty="(Grid.RowSpan)">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="2" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="ExpandSite"
                                                                       Storyboard.TargetProperty="(Grid.RowSpan)">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="2" />
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="ExpandSite"
                                                                       Storyboard.TargetProperty="(Grid.Row)">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="0" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="ExpandSite"
                                                                       Storyboard.TargetProperty="(Grid.Column)">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="1" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="rd0"
                                                                       Storyboard.TargetProperty="Height">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="*" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="cd1"
                                                                       Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="*" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background"
                                Padding="{TemplateBinding Padding}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="1,1,1,1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"
                                                   x:Name="rd0" />
                                    <RowDefinition Height="Auto"
                                                   x:Name="rd1" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"
                                                      x:Name="cd0" />
                                    <ColumnDefinition Width="Auto"
                                                      x:Name="cd1" />
                                </Grid.ColumnDefinitions>

                                <con:AccordionButton x:Name="ExpanderButton"
                                                     Style="{TemplateBinding AccordionButtonStyle}"
                                                     Content="{TemplateBinding Header}"
                                                     ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                     IsChecked="{TemplateBinding IsSelected}"
                                                     IsTabStop="True"
                                                     Grid.Row="0"
                                                     Padding="0,0,0,0"
                                                     Margin="0,0,0,0"
                                                     FontFamily="{TemplateBinding FontFamily}"
                                                     FontSize="{TemplateBinding FontSize}"
                                                     FontStretch="{TemplateBinding FontStretch}"
                                                     FontStyle="{TemplateBinding FontStyle}"
                                                     FontWeight="{TemplateBinding FontWeight}"
                                                     Foreground="{TemplateBinding Foreground}"
                                                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                     HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                                     VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                                     Background="{TemplateBinding Background}" />
                                <con:ExpandableContentControl x:Name="ExpandSite"
                                                              Grid.Row="1"
                                                              IsTabStop="False"
                                                              Percentage="0"
                                                              RevealMode="{TemplateBinding ExpandDirection}"
                                                              Content="{TemplateBinding Content}"
                                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                                              Margin="0,0,0,0"
                                                              Style="{TemplateBinding ExpandableContentControlStyle}"
                                                              FontFamily="{TemplateBinding FontFamily}"
                                                              FontSize="{TemplateBinding FontSize}"
                                                              FontStretch="{TemplateBinding FontStretch}"
                                                              FontStyle="{TemplateBinding FontStyle}"
                                                              FontWeight="{TemplateBinding FontWeight}"
                                                              Foreground="{TemplateBinding Foreground}"
                                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                              HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                                              VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  con:LayoutTransformer  -->
    <Style TargetType="con:LayoutTransformer">
        <Setter Property="Foreground"
                Value="#FF000000" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="con:LayoutTransformer">
                    <Grid x:Name="TransformRoot"
                          Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="Presenter"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
